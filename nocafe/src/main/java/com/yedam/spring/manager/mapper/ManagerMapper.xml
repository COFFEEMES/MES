<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.spring.manager.mapper.ManagerMapper">
	<!-- 기초 코드 전체 조회 -->
	<select id="getAllBasicCode" resultType="BasicCodeVO">
		SELECT basic_code
			 , basic_name
		  FROM basic_code
		 ORDER BY basic_code
	</select>

	<!-- 상세 코드 조회 -->
	<select id="getDetailCode" resultType="DetailCodeVO">
		SELECT detail_code
			 , detail_name
			 , detail_explain
			 , detail_avail
		  FROM basic_code b, detail_code d
		 WHERE b.basic_code = d.basic_code
		   AND d.basic_code = #{basicCode}
		 ORDER BY detail_code
	</select>

	<!-- 공통 코드 추가 -->
	<insert id="insertBasicCode" parameterType="BasicCodeVO">
		INSERT INTO basic_code
		VALUES ( #{basicCode}, #{basicName} )
	</insert>

	<!-- 상세 코드 추가 or 수정 -->
	<update id="upsertDetailCode" statementType="CALLABLE" parameterType="DetailCodeVO">
		{ CALL upsert_detail_code(
			  #{detailCode}
			, #{basicCode}
			, #{detailName}
			, #{detailExplain}
			, #{detailAvail}
		  )
		}
	</update>

	<!-- 거래처 전체 조회 -->
	<select id="getAllVend" resultType="VendVO">
		SELECT *
		  FROM detail_code d, vend v
		 WHERE v.vend_cd = d.basic_code||d.detail_code
		   AND detail_avail = 'Y'
		 ORDER BY detail_code
	</select>
	
	<!-- 거래처 추가or수정 -->
	<update id="mergeVend" statementType="CALLABLE" parameterType="VendVO">
		{ CALL upsert_vend(
			  #{vendCd}
			, #{vendNm}
			, #{bizno}
			, #{telno}
			, #{vendAddr}
			, #{empCode}
			, #{vendTyp}
		  )
		}
	</update>
	
	<!-- 거래처 삭제 -->
	<update id="delVend" statementType="CALLABLE" parameterType="VendVO">
		UPDATE detail_code
		   SET detail_avail = 'N'
		 WHERE basic_code||detail_code = #{vendCd}
	</update>
	
	<!-- 담당사원 검색 -->
	<select id="getEmpList" resultType="EmpVO">
		SELECT *
		  FROM emp e, detail_code d
		 WHERE e.emp_code = d.basic_code||d.detail_code
	</select>
	
	<!-- 자재 전체 조회 -->
	<select id="getAllMat" resultType="DetailCodeVO">
		SELECT *
		  FROM detail_code
		 WHERE basic_code = 'RSC'
		   AND detail_avail = 'Y'
		 ORDER BY detail_code
	</select>
	
	<!-- 자재 구분 조회 -->
	<select id="getMatType" resultType="DetailCodeVO">
		SELECT DISTINCT(detail_name)
			 , SUBSTR(detail_code, 1, LENGTH(detail_code) - 3) detail_code
		  FROM detail_code
		 WHERE basic_code = 'RSC'
		 ORDER BY 1
	</select>
	
	<!-- 자재 상세 정보 조회 -->
	<select id="getRsc" resultType="RscVO">
		SELECT *
		  FROM rsc
		 WHERE rsc_cd = #{rscCd}
		 ORDER BY rsc_cd
	</select>
	
	<!-- 자재 상세 정보 추가/수정 -->
	<update id="mergeRsc" statementType="CALLABLE" parameterType="RscVO">
		{ CALL merge_rsc(
			  #{rscCd}
			, #{rscNm}
			, #{rscTyp}
			, #{rscSpec}
			, #{rscUnit}
			, #{safRtc}
			, #{rscAvail}
			, #{hInput}
		  )
		}
	</update>
	
	<!-- 자재 삭제 -->
	<update id="delRsc" parameterType="RscVO">
		UPDATE detail_code
		   SET detail_avail = 'N'
		 WHERE basic_code||detail_code = #{rscCd}
	</update>

</mapper>