<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.spring.manufacturing.performance.mapper.PerformanceMapper">
	<!-- 모든 지시 조회 -->
	<select id="getAllInst" resultType="InstVO">
		SELECT DISTINCT h.pr_order_cd
			 , h.pr_order_dt
		  FROM pr_order_header h, pr_order o
		 WHERE h.pr_order_cd = o.pr_order_cd
		   AND o.pr_end_dt IS NULL
		 ORDER BY 1
	</select>
	
	<!-- 지시 상세 조회 -->
	<select id="getPrOrderDetail" resultType="InstVO">
		SELECT *
		  FROM pr_order p, edcts e
		 WHERE p.pro_cd = e.pro_cd
		   AND pr_order_cd = #{prOrderCd}
		 ORDER BY p.pro_cd
	</select>
	
	<!-- 제품별 공정 조회 -->
	<select id="getPrcsBom" resultType="ProcessVO">
		SELECT *
		  FROM process_tbl t, prcs_result r, prcs p, emp e
		 WHERE t.pr_order_cd = r.pr_order_cd
		   AND t.pro_cd = r.pro_cd
		   AND t.prcs_cd = r.prcs_cd
		   AND t.prcs_cd = p.prcs_cd
		   AND r.worker = e.emp_code(+)
		   AND t.pr_order_cd = #{prOrderCd}
		   AND t.pro_cd = #{proCd}
		 ORDER BY t.bom_sq
	</select>
	
	<!-- 공정에 따른 설비 조회 -->
	<select id="getPrcsEqm" resultType="EqmVO">
		SELECT *
		  FROM eqm e, prcs p
		 WHERE e.eqm_type = p.eqm_type
		   AND p.prcs_cd = #{prcsCd}
		   AND e.eqm_avail = 'Y'
	</select>
	
	<!-- 담당사원 검색 -->
	<select id="getEmpList" resultType="EmpVO">
		SELECT *
		  FROM emp e, detail_code d
		 WHERE e.emp_code = d.basic_code||d.detail_code
		   AND d.detail_avail = 'Y'
	</select>
	
	<!-- 작업 시작 -->
	<select id="prcsStart" statementType="CALLABLE" parameterType="ProcessVO">
		{ CALL prcs_start(
			  #{prOrderCd}
			, #{proCd}
			, #{prcsCd}
			, #{empCode}
			, #{stock}
			, #{eqmCd}
			, #{bomSq}
			, #{rscCd}
			, #{rscUse}
		  )
		}
	</select>
	
	<!-- 작업 끝 -->
	<select id="prcsEnd" statementType="CALLABLE" parameterType="ProcessVO">
		{ CALL prcs_end(
			  #{prOrderCd}
			, #{proCd}
			, #{prcsCd}
			, #{empCode}
			, #{stock}
			, #{eqmCd}
			, #{bomSq}
			, #{inferCnt}
			, #{rscCd}
			, #{rscUse}
		  )
		}
	</select>
	
	<!-- 필요 자재 수 구하기 -->
	<select id="getUseCnt" resultType="ProcessVO">
		SELECT *
		  FROM process_material
		 WHERE pr_order_cd = #{prOrderCd}
		   AND pro_cd = #{proCd}
		   AND prcs_cd = #{prcsCd}
		 ORDER BY rsc_cd
	</select>
	
	<!-- 품질 검사 목록 전체 조회 -->
	<select id="getAllInspection" resultType="ProcessVO">
		SELECT i.pr_order_cd, i.pro_cd, e.pro_nm
		  FROM product_inspection i, edcts e
		 WHERE i.pro_cd = e.pro_cd
           AND i.test_amt IS NULL
 		 GROUP BY i.pr_order_cd, i.pro_cd, e.pro_nm
 		 ORDER BY i.pr_order_cd, i.pro_cd, e.pro_nm
	</select>
	
	<!-- 제품별 품질 검사 항목 조회 -->
	<select id="getProTest" resultType="ProcessVO">
		 SELECT *
		  FROM product_inspection i, edcts e, process_tbl t, prcs_result r, emp m, edcts_stan s
		 WHERE i.pro_cd = e.pro_cd
		   AND i.pr_order_cd = t.pr_order_cd
		   AND i.pro_cd = t.pro_cd
		   AND t.pr_order_cd = r.pr_order_cd
		   AND t.pro_cd = r.pro_cd
		   AND t.prcs_cd = r.prcs_cd
           AND r.worker = m.emp_code(+)
           AND i.test_cd = s.stan_cd
		   AND i.pr_order_cd = #{prOrderCd}
		   AND i.pro_cd = #{proCd}
		   AND t.prcs_cd LIKE 'PRCTES%'
		 ORDER BY i.test_item
	</select>
	
	<!-- 검사 시작 -->
	<update id="testStart" statementType="CALLABLE" parameterType="ProcessVO">
		{ CALL test_start(
			  #{prOrderCd}
			, #{proCd}
			, #{testCd}
			, #{empCode}
			, #{stock}
		  )
		}
	</update>
	
	<!-- 검사 끝 -->
	<update id="testEnd" statementType="CALLABLE" parameterType="ProcessVO">
		{ CALL test_end(
			  #{prOrderCd}
			, #{proCd}
			, #{testCd}
			, #{empCode}
			, #{stock}
			, #{testAmt}
		  )
		}
	</update>
</mapper>