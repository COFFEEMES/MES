<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.yedam.spring.manufacturing.plan.mapper.PlanMapper">
	<!-- ↓↓↓↓↓ 모달창에 주문서 불러오기 -->
	<select id="selectOrderList" resultType="OrderVO">
		SELECT  DISTINCT order_no,
				 order_dt, 
                 parrd_dt, 
				 vend_nm
		FROM	 order_sheet 
		
		WHERE	 plan_no is null OR plan_no='미등록'
		ORDER BY 3
	</select>
<!-- 	주문서 번호 => 주문제품 , 총량 -->
	<select id="getOrderPro" resultType="PlanVO">
       SELECT o.pro_nm, p.pro_cd, o.order_cnt, p.stock_cnt
        FROM (SELECT pro_nm, pro_cd, SUM(order_cnt) AS order_cnt
		      FROM order_detail 
		      WHERE order_no IN <foreach collection="array" item="arr" open="(" close=")" separator=",">
							        	#{arr}
							        </foreach>
		      GROUP By pro_nm, pro_cd) o
       	JOIN
		(SELECT pro_cd, SUM(lot_cnt) AS stock_cnt
		 FROM pro_stc
		 WHERE pro_cd IN (( SELECT DISTINCT pro_cd
					        FROM order_detail 
					        WHERE order_no IN  <foreach collection="array" item="arr" open="(" close=")" separator=",">
										        	#{arr}
										        </foreach>
										        ))
        GROUP BY pro_cd) p
        ON o.pro_cd = p.pro_cd
	</select>

	<!-- ↓↓↓↓↓ 생산계획코드 생성 -->
	<select id="getPlanCd" resultType="PlanVO">
		SELECT 'PL'||
				TO_CHAR(TO_DATE(#{planDtFormat},'yyyy-MM-dd'),'yyMMdd')||
				CASE
				WHEN
				COUNT(*) > 0 THEN TO_CHAR(COUNT(*)+1,'fm000')
				ELSE '001'
				END plan_cd
		FROM 	plans_header
		WHERE 	TO_CHAR(plan_dt, 'yyyy-MM-dd') = #{planDtFormat}
	</select>
	




	<!-- ↓↓↓↓↓bom통해서 공정 호출 -->
	<select id="getBomCd" resultType="PlanVO">
		SELECT 	b.bom_sq,
				b.pro_cd, 
				NVL(b.rsc_cd,'이전 공정 결과물')AS rsc_cd,
				b.prcs_cd, 
				b.use_cnt,	
				NVL(d.detail_explain,'이전 공정의 결과물') AS rsc_nm ,
				e.detail_name
		AS 		prcs_nm
		FROM 	bom b LEFT OUTER Join detail_code d
		ON	 	b.rsc_cd = d.full_code
								 JOIN detail_code e
								 ON b.prcs_cd = e.full_code
		WHERE 	b.pro_cd = (select full_code from detail_code where detail_explain = #{proNm}) 
		ORDER BY 1
	</select>
	
<!-- 	↓↓↓↓↓↓불량률 조회 -->
	<select id="getInferPct" resultType="PlanVO">
		SELECT  b.bom_sq, 
				p.prcs_cd, 
				TRUNC(AVG((p.infer_cnt/p.prod_cnt)*100),0)||'%' as infer_pct
		FROM 	prcs_result p join bom b
		ON 		p.prcs_cd = b.prcs_cd
		WHERE 	b.pro_cd = (select full_code from detail_code where detail_explain = #{proNm})
		GROUP BY b.bom_sq, p.prcs_cd
		ORDER BY 1 
	</select>
<!-- ========================================================================사용중  -->
	
<!-- 	↓↓↓↓↓필요재료 조회 -->
	<select id="getRscNeed" resultType="PlanVO">
		SELECT r.rsc_cd, SUM(r.lot_cnt) lot_cnt, d.detail_explain rsc_nm, s.ex_cnt
  		FROM rsc_lot r, detail_code d, (SELECT rsc_cd, SUM(CASE pro_cd
  													<foreach collection="conAry" item="arr" >
                                                   WHEN (SELECT full_code FROM detail_code WHERE detail_explain = #{arr.proNm}) THEN use_cnt * #{arr.proCnt}
										        	</foreach>
                                                 	END) ex_cnt
                                    	FROM bom
                                   		WHERE pro_cd IN (SELECT full_code
                                                      	 FROM detail_code 
                                                     	 WHERE detail_explain IN  <foreach collection="conAry" item="arr" open="(" close=")" separator=",">
																		        	#{arr.proNm}
																		          </foreach>
                                                    )
                                   		GROUP BY rsc_cd
                                  ) s
		 WHERE r.rsc_cd = d.full_code
   		 AND r.rsc_cd = s.rsc_cd
  		 AND r.rsc_cd IN(SELECT DISTINCT rsc_cd
                     	 FROM bom
                    	 WHERE pro_cd IN (SELECT DISTINCT full_code
                                       FROM detail_code 
                                      WHERE detail_explain IN  <foreach collection="conAry" item="arr" open="(" close=")" separator=",">
															   #{arr.proNm}
																</foreach>
                                     )
                   )
 		 GROUP BY r.rsc_cd, d.detail_explain, s.ex_cnt
	</select>
	
<!-- ↓↓↓↓↓↓↓필요재고 LOT조회 -->
	<select id="getRscDetil" resultType="PlanVO">
		select      rsc_lot_cd, 
		            lot_cnt, 
		            exp_dt,
					#{rscNm} as rscNm
	    from 		rsc_lot
	    where 		rsc_cd =(select rsc_cd
		                     from   (select b.rsc_cd, d.detail_name
		                                from bom b join detail_code d
		                                on  b.rsc_cd = d.detail_code
		                                where b.bom_cd = #{bomCd}) 
		                     where detail_name LIKE '%${rscNm}%')
		order by 3
	</select>

</mapper>