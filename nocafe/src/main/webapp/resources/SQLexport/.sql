--------------------------------------------------------
--  파일이 생성됨 - 목요일-4월-20-2023   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Type GLOBAL_VA_CLASSNAME
--------------------------------------------------------

  CREATE OR REPLACE TYPE "MES"."GLOBAL_VA_CLASSNAME" IS VARRAY(5) OF VARCHAR2(30);

/
--------------------------------------------------------
--  DDL for Type GLOBAL_VA_STUDENT
--------------------------------------------------------

  CREATE OR REPLACE TYPE "MES"."GLOBAL_VA_STUDENT" IS OBJECT(
        st_name VARCHAR2(20),
        st_age NUMBER,
        st_phone_num VARCHAR2(15),
        st_address VARCHAR2(50),
        st_class VARCHAR2(30));

/
--------------------------------------------------------
--  DDL for Type INFO_LIST
--------------------------------------------------------

  CREATE OR REPLACE TYPE "MES"."INFO_LIST" AS VARRAY(5) OF plan_obj;

/
--------------------------------------------------------
--  DDL for Type PLAN_OBJ
--------------------------------------------------------

  CREATE OR REPLACE TYPE "MES"."PLAN_OBJ" AS OBJECT(
    pro_nm      VARCHAR2(50),
    plan_cnt    NUMBER
);

/
--------------------------------------------------------
--  DDL for Table BASIC_CODE
--------------------------------------------------------

  CREATE TABLE "MES"."BASIC_CODE" 
   (	"BASIC_CODE" VARCHAR2(10 BYTE), 
	"BASIC_NAME" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table BOM
--------------------------------------------------------

  CREATE TABLE "MES"."BOM" 
   (	"BOM_SQ" NUMBER, 
	"RSC_CD" VARCHAR2(20 BYTE), 
	"PRO_CD" VARCHAR2(20 BYTE), 
	"UNIT" VARCHAR2(30 BYTE), 
	"USE_CNT" VARCHAR2(20 BYTE), 
	"PRCS_CD" VARCHAR2(20 BYTE), 
	"EQM_CD" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table DETAIL_CODE
--------------------------------------------------------

  CREATE TABLE "MES"."DETAIL_CODE" 
   (	"DETAIL_CODE" VARCHAR2(10 BYTE), 
	"BASIC_CODE" VARCHAR2(10 BYTE), 
	"DETAIL_NAME" VARCHAR2(30 BYTE), 
	"DETAIL_EXPLAIN" VARCHAR2(300 BYTE), 
	"DETAIL_AVAIL" VARCHAR2(15 BYTE), 
	"FULL_CODE" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table EDCTS
--------------------------------------------------------

  CREATE TABLE "MES"."EDCTS" 
   (	"PRO_CD" VARCHAR2(20 BYTE), 
	"PRO_NM" VARCHAR2(60 BYTE), 
	"PRO_SPEC" VARCHAR2(60 BYTE), 
	"PRO_UNIT" VARCHAR2(30 BYTE), 
	"SAF_RTC" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table EDCTS_IST
--------------------------------------------------------

  CREATE TABLE "MES"."EDCTS_IST" 
   (	"PRO_IST_NO" VARCHAR2(50 BYTE), 
	"PRO_CD" VARCHAR2(10 BYTE), 
	"PRO_IST_DT" DATE, 
	"PRO_IST_CNT" NUMBER, 
	"PRO_LOT_NO" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table EDCTS_STAN
--------------------------------------------------------

  CREATE TABLE "MES"."EDCTS_STAN" 
   (	"STAN_CD" VARCHAR2(20 BYTE), 
	"STAN_NM" VARCHAR2(60 BYTE), 
	"STAN_IT" VARCHAR2(60 BYTE), 
	"STAN_PS" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table EMP
--------------------------------------------------------

  CREATE TABLE "MES"."EMP" 
   (	"EMP_CODE" VARCHAR2(20 BYTE), 
	"EMP_ID" VARCHAR2(60 BYTE), 
	"EMP_PW" VARCHAR2(60 BYTE), 
	"EMP_NAME" VARCHAR2(60 BYTE), 
	"EMP_PHONE" VARCHAR2(30 BYTE), 
	"EMP_EMAIL" VARCHAR2(90 BYTE), 
	"EMP_H_DATE" DATE, 
	"EMP_L_DATE" DATE, 
	"EMP_AUTH" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table EQM
--------------------------------------------------------

  CREATE TABLE "MES"."EQM" 
   (	"EQM_CD" VARCHAR2(20 BYTE), 
	"EQM_NM" VARCHAR2(60 BYTE), 
	"EQM_IST_DT" DATE, 
	"CHK_PRD" NUMBER, 
	"EQM_TYPE" VARCHAR2(20 BYTE), 
	"EQM_AVAIL" VARCHAR2(2 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table INFER
--------------------------------------------------------

  CREATE TABLE "MES"."INFER" 
   (	"INFER_CD" VARCHAR2(20 BYTE), 
	"INFER_NM" VARCHAR2(60 BYTE), 
	"INFER_CNT" NUMBER, 
	"INFER_THI" VARCHAR2(30 BYTE), 
	"INFER_SQ" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table ORDER_DETAIL
--------------------------------------------------------

  CREATE TABLE "MES"."ORDER_DETAIL" 
   (	"ORDER_DETAIL_NO" VARCHAR2(100 BYTE), 
	"ORDER_NO" VARCHAR2(50 BYTE), 
	"PRO_CD" VARCHAR2(10 BYTE), 
	"PRO_NM" VARCHAR2(50 BYTE), 
	"ORDER_SIT_DETAIL" VARCHAR2(10 BYTE), 
	"ORDER_CNT" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table ORDER_SHEET
--------------------------------------------------------

  CREATE TABLE "MES"."ORDER_SHEET" 
   (	"ORDER_NO" VARCHAR2(50 BYTE), 
	"VEND_CD" VARCHAR2(10 BYTE), 
	"VEND_NM" VARCHAR2(50 BYTE), 
	"ORDER_DT" DATE, 
	"ORDER_SIT" VARCHAR2(10 BYTE), 
	"PARRD_DT" DATE, 
	"PLAN_NO" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PLANS
--------------------------------------------------------

  CREATE TABLE "MES"."PLANS" 
   (	"PLAN_CD" VARCHAR2(50 BYTE), 
	"PRO_CD" VARCHAR2(50 BYTE), 
	"PLAN_CNT" NUMBER, 
	"EX_START_DT" DATE, 
	"EX_END_DT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PLANS_HEADER
--------------------------------------------------------

  CREATE TABLE "MES"."PLANS_HEADER" 
   (	"PLAN_CD" VARCHAR2(50 BYTE), 
	"PLAN_DT" DATE, 
	"PLAN_MANAGER" VARCHAR2(50 BYTE), 
	"DIR_STATUS" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PRCS
--------------------------------------------------------

  CREATE TABLE "MES"."PRCS" 
   (	"PRCS_CD" VARCHAR2(20 BYTE), 
	"PRCS_NM" VARCHAR2(60 BYTE), 
	"EQM_TYPE" VARCHAR2(20 BYTE), 
	"PRCS_EXPLAIN" VARCHAR2(60 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PRCS_RESULT
--------------------------------------------------------

  CREATE TABLE "MES"."PRCS_RESULT" 
   (	"PR_ORDER_CD" VARCHAR2(50 BYTE), 
	"PRO_CD" VARCHAR2(50 BYTE), 
	"PRCS_CD" VARCHAR2(50 BYTE), 
	"WORKER" VARCHAR2(100 BYTE), 
	"WK_FR_DTTM" DATE, 
	"WK_TO_DTTM" DATE, 
	"INFER_CNT" NUMBER, 
	"PROD_CNT" NUMBER, 
	"NOTE" VARCHAR2(1000 BYTE), 
	"EQM_CD" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PROCESS_MATERIAL
--------------------------------------------------------

  CREATE TABLE "MES"."PROCESS_MATERIAL" 
   (	"PR_ORDER_CD" VARCHAR2(50 BYTE), 
	"PRO_CD" VARCHAR2(50 BYTE), 
	"PRCS_CD" VARCHAR2(50 BYTE), 
	"RSC_CD" VARCHAR2(50 BYTE), 
	"RSC_TOTAL" VARCHAR2(50 BYTE), 
	"RSC_USE" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PROCESS_TBL
--------------------------------------------------------

  CREATE TABLE "MES"."PROCESS_TBL" 
   (	"PR_ORDER_CD" VARCHAR2(50 BYTE), 
	"PRO_CD" VARCHAR2(50 BYTE), 
	"PRCS_CD" VARCHAR2(50 BYTE), 
	"BOM_SQ" NUMBER, 
	"STOCK" NUMBER, 
	"OUTPUT" NUMBER, 
	"BAD_QUANTITY" NUMBER, 
	"COMPLETED" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PRODUCT_INSPECTION
--------------------------------------------------------

  CREATE TABLE "MES"."PRODUCT_INSPECTION" 
   (	"PR_ORDER_CD" VARCHAR2(50 BYTE), 
	"PRO_CD" VARCHAR2(50 BYTE), 
	"TEST_CD" VARCHAR2(50 BYTE), 
	"TEST_CNT" VARCHAR2(50 BYTE), 
	"TEST_ITEM" VARCHAR2(50 BYTE), 
	"TEST_AMT" VARCHAR2(50 BYTE), 
	"TEST_PS_OR_NOT" VARCHAR2(5 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PRO_OUST
--------------------------------------------------------

  CREATE TABLE "MES"."PRO_OUST" 
   (	"PRO_OUST_NO" VARCHAR2(50 BYTE), 
	"PRO_CD" VARCHAR2(10 BYTE), 
	"PRO_LOT_NO" VARCHAR2(50 BYTE), 
	"PRO_OUST_DT" DATE, 
	"PRO_OUST_CNT" NUMBER, 
	"ORDER_NO" VARCHAR2(50 BYTE), 
	"ORDER_DETAIL_NO" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PRO_STC
--------------------------------------------------------

  CREATE TABLE "MES"."PRO_STC" 
   (	"PRO_LOT_NO" VARCHAR2(50 BYTE), 
	"PRO_IST_NO" VARCHAR2(50 BYTE), 
	"PRO_CD" VARCHAR2(50 BYTE), 
	"LOT_CNT" NUMBER, 
	"PRO_EXP" DATE, 
	"PRO_WDT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PR_ORDER
--------------------------------------------------------

  CREATE TABLE "MES"."PR_ORDER" 
   (	"PR_ORDER_CD" VARCHAR2(50 BYTE), 
	"PRO_CD" VARCHAR2(50 BYTE), 
	"ORDER_OUTPUT" NUMBER, 
	"PR_START_DT" DATE, 
	"PR_END_DT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table PR_ORDER_HEADER
--------------------------------------------------------

  CREATE TABLE "MES"."PR_ORDER_HEADER" 
   (	"PR_ORDER_CD" VARCHAR2(50 BYTE), 
	"PR_ORDER_MANAGER" VARCHAR2(20 BYTE), 
	"PR_ORDER_DT" DATE, 
	"PLAN_NO" VARCHAR2(50 BYTE), 
	"DIR_START_DT" DATE, 
	"DIR_END_DT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table RETURN
--------------------------------------------------------

  CREATE TABLE "MES"."RETURN" 
   (	"RETURN_CD" VARCHAR2(50 BYTE), 
	"RETURN_DT" DATE, 
	"RETURN_CNT" NUMBER, 
	"RETURN_MA" VARCHAR2(100 BYTE), 
	"RETURN_RE" VARCHAR2(1000 BYTE), 
	"RETURN_SIT" VARCHAR2(1000 BYTE), 
	"PRO_LOT_NO" VARCHAR2(50 BYTE), 
	"VEND_CD" VARCHAR2(50 BYTE), 
	"ORDER_NO" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table RSC
--------------------------------------------------------

  CREATE TABLE "MES"."RSC" 
   (	"RSC_CD" VARCHAR2(20 BYTE), 
	"RSC_NM" VARCHAR2(60 BYTE), 
	"RSC_TYP" VARCHAR2(50 BYTE), 
	"RSC_SPEC" VARCHAR2(60 BYTE), 
	"RSC_UNIT" VARCHAR2(30 BYTE), 
	"SAF_RTC" VARCHAR2(20 BYTE), 
	"RSC_AVAIL" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table RSC_INFER
--------------------------------------------------------

  CREATE TABLE "MES"."RSC_INFER" 
   (	"INF_CD" VARCHAR2(30 BYTE), 
	"INSP_CD" VARCHAR2(10 BYTE), 
	"ORDR_CD" VARCHAR2(20 BYTE), 
	"RSC_CD" VARCHAR2(6 BYTE), 
	"INF_CNT" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table RSC_INSP
--------------------------------------------------------

  CREATE TABLE "MES"."RSC_INSP" 
   (	"INSP_CD" VARCHAR2(50 BYTE), 
	"INSP_DT" DATE, 
	"INSP_TSTR" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table RSC_INSP_DTL
--------------------------------------------------------

  CREATE TABLE "MES"."RSC_INSP_DTL" 
   (	"INSP_CD" VARCHAR2(50 BYTE), 
	"ORDR_CD" VARCHAR2(20 BYTE), 
	"RSC_CD" VARCHAR2(50 BYTE), 
	"INSP_CNT" NUMBER, 
	"INSP_PASS_CNT" NUMBER, 
	"INSP_FAIL_CNT" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table RSC_IST
--------------------------------------------------------

  CREATE TABLE "MES"."RSC_IST" 
   (	"IST_CD" VARCHAR2(50 BYTE), 
	"RSC_CD" VARCHAR2(50 BYTE), 
	"IST_CNT" NUMBER, 
	"IST_DT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table RSC_LOT
--------------------------------------------------------

  CREATE TABLE "MES"."RSC_LOT" 
   (	"RSC_LOT_CD" VARCHAR2(50 BYTE), 
	"RSC_INSP_CD" VARCHAR2(50 BYTE), 
	"ORDR_CD" VARCHAR2(20 BYTE), 
	"IST_CD" VARCHAR2(50 BYTE), 
	"LOT_CNT" NUMBER, 
	"EXP_DT" DATE, 
	"RSC_CD" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table RSC_ORDR
--------------------------------------------------------

  CREATE TABLE "MES"."RSC_ORDR" 
   (	"ORDR_CD" VARCHAR2(50 BYTE), 
	"ORDR_REQ_DT" DATE, 
	"VEND_CD" VARCHAR2(50 BYTE), 
	"ORDR_CK" VARCHAR2(10 BYTE) DEFAULT '0'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table RSC_ORDR_DTL
--------------------------------------------------------

  CREATE TABLE "MES"."RSC_ORDR_DTL" 
   (	"ORDR_CD" VARCHAR2(50 BYTE), 
	"RSC_CD" VARCHAR2(50 BYTE), 
	"ORDR_CNT" NUMBER, 
	"RMN_CNT" NUMBER, 
	"PAPRD_CMND_DT" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table RSC_OUST
--------------------------------------------------------

  CREATE TABLE "MES"."RSC_OUST" 
   (	"RSC_OUST_CD" VARCHAR2(50 BYTE), 
	"RSC_CD" VARCHAR2(6 BYTE), 
	"OUST_DT" DATE, 
	"OUST_TYP" VARCHAR2(50 BYTE), 
	"OUST_CNT" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table RSC_OUST_DTL
--------------------------------------------------------

  CREATE TABLE "MES"."RSC_OUST_DTL" 
   (	"RSC_OUST_CD" VARCHAR2(50 BYTE), 
	"LOT_CD" VARCHAR2(10 BYTE), 
	"RSC_CD" VARCHAR2(6 BYTE), 
	"OUST_CNT" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table TEST_TBL
--------------------------------------------------------

  CREATE TABLE "MES"."TEST_TBL" 
   (	"PRO_NM" VARCHAR2(50 BYTE), 
	"PLAN_CNT" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table VEND
--------------------------------------------------------

  CREATE TABLE "MES"."VEND" 
   (	"VEND_CD" VARCHAR2(20 BYTE), 
	"VEND_NM" VARCHAR2(60 BYTE), 
	"BIZNO" VARCHAR2(60 BYTE), 
	"TELNO" VARCHAR2(30 BYTE), 
	"VEND_ADDR" VARCHAR2(120 BYTE), 
	"EMP_CODE" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
REM INSERTING into MES.BASIC_CODE
SET DEFINE OFF;
Insert into MES.BASIC_CODE (BASIC_CODE,BASIC_NAME) values ('EMP','사원코드');
Insert into MES.BASIC_CODE (BASIC_CODE,BASIC_NAME) values ('EQM','설비코드');
Insert into MES.BASIC_CODE (BASIC_CODE,BASIC_NAME) values ('ERR','불량코드');
Insert into MES.BASIC_CODE (BASIC_CODE,BASIC_NAME) values ('ISP','검사코드');
Insert into MES.BASIC_CODE (BASIC_CODE,BASIC_NAME) values ('PRC','공정코드');
Insert into MES.BASIC_CODE (BASIC_CODE,BASIC_NAME) values ('PRO','제품코드');
Insert into MES.BASIC_CODE (BASIC_CODE,BASIC_NAME) values ('VND','거래처코드');
Insert into MES.BASIC_CODE (BASIC_CODE,BASIC_NAME) values ('RSC','자재코드');
REM INSERTING into MES.BOM
SET DEFINE OFF;
Insert into MES.BOM (BOM_SQ,RSC_CD,PRO_CD,UNIT,USE_CNT,PRCS_CD,EQM_CD) values (1,'RSCBEN001','PROLIQ001','100','1','PRCRST001',null);
Insert into MES.BOM (BOM_SQ,RSC_CD,PRO_CD,UNIT,USE_CNT,PRCS_CD,EQM_CD) values (2,'RSCRBN001','PROLIQ001','100','1','PRCGRN001',null);
Insert into MES.BOM (BOM_SQ,RSC_CD,PRO_CD,UNIT,USE_CNT,PRCS_CD,EQM_CD) values (3,'RSCWTR001','PROLIQ001','100','1','PRCETR001',null);
Insert into MES.BOM (BOM_SQ,RSC_CD,PRO_CD,UNIT,USE_CNT,PRCS_CD,EQM_CD) values (4,'RSCSYR001','PROLIQ001','100','1','PRCCMB001','배합기');
Insert into MES.BOM (BOM_SQ,RSC_CD,PRO_CD,UNIT,USE_CNT,PRCS_CD,EQM_CD) values (4,'RSCWTR001','PROLIQ001','100','1','PRCCMB001','배합기');
Insert into MES.BOM (BOM_SQ,RSC_CD,PRO_CD,UNIT,USE_CNT,PRCS_CD,EQM_CD) values (1,'RSCBEN002','PROLIQ002','100','1','PRCRST002',null);
Insert into MES.BOM (BOM_SQ,RSC_CD,PRO_CD,UNIT,USE_CNT,PRCS_CD,EQM_CD) values (2,'RSCRBN002','PROLIQ002','100','1','PRCGRN001',null);
Insert into MES.BOM (BOM_SQ,RSC_CD,PRO_CD,UNIT,USE_CNT,PRCS_CD,EQM_CD) values (3,'RSCWTR001','PROLIQ002','100','1','PRCETR002',null);
Insert into MES.BOM (BOM_SQ,RSC_CD,PRO_CD,UNIT,USE_CNT,PRCS_CD,EQM_CD) values (4,'RSCSYR001','PROLIQ002','100','1','PRCCMB002',null);
Insert into MES.BOM (BOM_SQ,RSC_CD,PRO_CD,UNIT,USE_CNT,PRCS_CD,EQM_CD) values (4,'RSCMLK001','PROLIQ002','100','1','PRCCMB002',null);
Insert into MES.BOM (BOM_SQ,RSC_CD,PRO_CD,UNIT,USE_CNT,PRCS_CD,EQM_CD) values (1,'RSCBEN002','PROLIQ003','100','1','PRCRST002',null);
Insert into MES.BOM (BOM_SQ,RSC_CD,PRO_CD,UNIT,USE_CNT,PRCS_CD,EQM_CD) values (1,'RSCBEN003','PROLIQ004','100','1','PRCRST002',null);
Insert into MES.BOM (BOM_SQ,RSC_CD,PRO_CD,UNIT,USE_CNT,PRCS_CD,EQM_CD) values (2,'RSCRBN002','PROLIQ003','100','1','PRCGRN001',null);
Insert into MES.BOM (BOM_SQ,RSC_CD,PRO_CD,UNIT,USE_CNT,PRCS_CD,EQM_CD) values (3,'RSCWTR001','PROLIQ003','100','1','PRCETR002',null);
Insert into MES.BOM (BOM_SQ,RSC_CD,PRO_CD,UNIT,USE_CNT,PRCS_CD,EQM_CD) values (4,'RSCSYR002','PROLIQ003','100','1','PRCCMB003',null);
Insert into MES.BOM (BOM_SQ,RSC_CD,PRO_CD,UNIT,USE_CNT,PRCS_CD,EQM_CD) values (4,'RSCMLK001','PROLIQ003','100','1','PRCCMB003',null);
Insert into MES.BOM (BOM_SQ,RSC_CD,PRO_CD,UNIT,USE_CNT,PRCS_CD,EQM_CD) values (6,'RSCPET001','PROLIQ003','100','1','PRCWRP001',null);
Insert into MES.BOM (BOM_SQ,RSC_CD,PRO_CD,UNIT,USE_CNT,PRCS_CD,EQM_CD) values (5,'RSCNOT001','PROLIQ003','100','0','PRCTES001',null);
Insert into MES.BOM (BOM_SQ,RSC_CD,PRO_CD,UNIT,USE_CNT,PRCS_CD,EQM_CD) values (5,'RSCNOT001','PROLIQ001','100','0','PRCTES001','검사기');
Insert into MES.BOM (BOM_SQ,RSC_CD,PRO_CD,UNIT,USE_CNT,PRCS_CD,EQM_CD) values (2,'RSCNOT001','PROLIQ004','100','0','PRCGRN001',null);
Insert into MES.BOM (BOM_SQ,RSC_CD,PRO_CD,UNIT,USE_CNT,PRCS_CD,EQM_CD) values (3,'RSCWTR001','PROLIQ004','100','1','PRCETR002',null);
Insert into MES.BOM (BOM_SQ,RSC_CD,PRO_CD,UNIT,USE_CNT,PRCS_CD,EQM_CD) values (4,'RSCSYR001','PROLIQ004','100','1','PRCCMB002',null);
Insert into MES.BOM (BOM_SQ,RSC_CD,PRO_CD,UNIT,USE_CNT,PRCS_CD,EQM_CD) values (4,'RSCMLK001','PROLIQ004','100','1','PRCCMB002',null);
Insert into MES.BOM (BOM_SQ,RSC_CD,PRO_CD,UNIT,USE_CNT,PRCS_CD,EQM_CD) values (6,'RSCPET001','PROLIQ001','100','1','PRCWRP001','포장기');
Insert into MES.BOM (BOM_SQ,RSC_CD,PRO_CD,UNIT,USE_CNT,PRCS_CD,EQM_CD) values (5,'RSCNOT001','PROLIQ002','100','0','PRCTES001',null);
Insert into MES.BOM (BOM_SQ,RSC_CD,PRO_CD,UNIT,USE_CNT,PRCS_CD,EQM_CD) values (6,'RSCPET001','PROLIQ002','100','1','PRCWRP001',null);
Insert into MES.BOM (BOM_SQ,RSC_CD,PRO_CD,UNIT,USE_CNT,PRCS_CD,EQM_CD) values (5,'RSCNOT001','PROLIQ004','100','0','PRCTES001','검사기');
Insert into MES.BOM (BOM_SQ,RSC_CD,PRO_CD,UNIT,USE_CNT,PRCS_CD,EQM_CD) values (6,'RSCPET001','PROLIQ004','100','1','PRCWRP001','포장기');
REM INSERTING into MES.DETAIL_CODE
SET DEFINE OFF;
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('MAT001','EMP','자재사원','안병살 사원','Y','EMPMAT001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('MAM001','EMP','자재부장','김철수 부장','Y','EMPMAM001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('SAP001','EMP','영업사원','신짱구 사원','Y','EMPSAP001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('ADM001','EMP','관리자','관리자','Y','EMPADM001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('SAM001','EMP','영업부장','신영만 부장','Y','EMPSAM001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('PRD001','EMP','생산사원','홍길동 사원','Y','EMPPRD001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('PRM001','EMP','생산부장','허균 부장','Y','EMPPRM001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('SAL001','VND','납품처','원두상사','Y','VNDSAL001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('PUR001','VND','매입처','별다방','Y','VNDPUR001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('TRA001','VND','운송회사','한국통운','Y','VNDTRA001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('DRY001','PRC','건조','분무 건조','Y','PRCDRY001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('DRY002','PRC','건조','진공 건조','Y','PRCDRY002');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('RST001','PRC','로스팅','로스팅','Y','PRCRST001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('GRN001','PRC','그라인딩','그라인딩','Y','PRCGRN001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('ETR001','PRC','추출','추출','Y','PRCETR001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('CMB001','PRC','배합','배합','Y','PRCCMB001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('WRP001','PRC','포장','포장','Y','PRCWRP001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('BEN001','RSC','원두','예가체프 아메리카노용 원두','Y','RSCBEN001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('WTR001','RSC','물 ','아리수','Y','RSCWTR001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('SYR001','RSC','시럽 ','무향시럽','Y','RSCSYR001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('MLK001','RSC','우유 ','서울우유','Y','RSCMLK001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('RBN001','RSC','로스팅원두','로스팅된 아메리카노 원두','Y','RSCRBN001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('PET001','RSC','포장용기','포장용기','Y','RSCPET001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('BEN003','RSC','원두','루왁','Y','RSCBEN003');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('LIQ001','PRO','액상커피','아메리카노','Y','PROLIQ001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('FRZ001','PRC','동결','동결','Y','PRCFRZ001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('TES001','PRC','검사','액상 커피 제품 검사','Y','PRCTES001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('TES002','PRC','검사','분말 커피 제품 검사','Y','PRCTES002');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('BEN002','RSC','원두','과테말라 라떼용 원두','Y','RSCBEN002');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('RBN002','RSC','로스팅원두','로스팅된 라떼용 원두','Y','RSCRBN002');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('LIQ002','PRO','액상커피','카페라떼','Y','PROLIQ002');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('LIQ003','PRO','액상커피','바닐라라떼','Y','PROLIQ003');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('SYR002','RSC','시럽','바닐라시럽','Y','RSCSYR002');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('SOL001','PRO','분말커피','커피믹스','Y','PROSOL001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('RST001','EQM','로스팅기','로스팅기','Y','EQMRST001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('GRN001','EQM','그라인딩기','그라인딩기2','Y','EQMGRN001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('ETR001','EQM','추출기','추출기','Y','EQMETR001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('CMB001','EQM','배합기','배합기','Y','EQMCMB001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('FRZ001','EQM','동결기','동결기','Y','EQMFRZ001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('DRY001','EQM','건조기','분무 건조기','Y','EQMDRY001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('WRP001','EQM','포장기','포장기','Y','EQMWRP001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('RST002','PRC','로스팅','로스팅2','Y','PRCRST002');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('ETR002','PRC','추출','추출2','Y','PRCETR002');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('CMB002','PRC','배합','배합2','Y','PRCCMB002');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('CMB003','PRC','배합','배합3','Y','PRCCMB003');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('LIQ004','PRO','액상커피','카페모카','Y','PROLIQ004');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('NOT001','RSC','재료없음','필요 자재 없음','Y','RSCNOT001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('CMB002','EQM','배합기','배합기2','Y','EQMCMB002');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('DRY002','EQM','건조기','분무 건조기2','Y','EQMDRY002');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('ETR002','EQM','추출기','추출기2','Y','EQMETR002');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('FRZ002','EQM','동결기','동결기2','Y','EQMFRZ002');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('RST002','EQM','로스팅기','로스팅기2','Y','EQMRST002');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('WRP002','EQM','포장기','포장기2','Y','EQMWRP002');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('GRN002','EQM','그라인딩기','그라인딩기2','Y','EQMGRN002');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('HYG001','ERR','위생불량','자재 위생 불량','Y','ERRHYG001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('PAV001','ERR','포장불량','자재 포장 불량','Y','ERRPAV001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('MAK001','ERR','제조불량','자재 제조 불량','Y','ERRMAK001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('PRC001','ERR','공정불량','공정 중 불량','Y','ERRPRC001');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('LEATEST','ERR','검사불량','납 기준치 초과','Y','ERRLEATEST');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('TINTEST','ERR','검사불량','주석 기준치 초과','Y','ERRTINTEST');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('TARTEST','ERR','검사불량','타르색소 기준치 초과','Y','ERRTARTEST');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('BACTEST','ERR','검사불량','세균 수 기준치 초과','Y','ERRBACTEST');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('COLTEST','ERR','검사불량','대장균군 기준치 초과','Y','ERRCOLTEST');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('LEATEST','ISP','품질검사','납 함량 검사','Y','ISPLEATEST');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('TINTEST','ISP','품질검사','주석 함량 검사','Y','ISPTINTEST');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('TARTEST','ISP','품질검사','타르색소 함량 검사','Y','ISPTARTEST');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('BACTEST','ISP','품질검사','세균 수 검사','Y','ISPBACTEST');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('COLTEST','ISP','품질검사','대장균군 검사','Y','ISPCOLTEST');
Insert into MES.DETAIL_CODE (DETAIL_CODE,BASIC_CODE,DETAIL_NAME,DETAIL_EXPLAIN,DETAIL_AVAIL,FULL_CODE) values ('ssss','EMP','sssss','짱구','Y','EMPssss');
REM INSERTING into MES.EDCTS
SET DEFINE OFF;
Insert into MES.EDCTS (PRO_CD,PRO_NM,PRO_SPEC,PRO_UNIT,SAF_RTC) values ('PROLIQ001','아메리카노','355ml*30EA*1box','EA','3000EA');
Insert into MES.EDCTS (PRO_CD,PRO_NM,PRO_SPEC,PRO_UNIT,SAF_RTC) values ('PROLIQ002','카페라떼','355ml*30EA*1box','EA','3000EA');
Insert into MES.EDCTS (PRO_CD,PRO_NM,PRO_SPEC,PRO_UNIT,SAF_RTC) values ('PROLIQ003','바닐라라떼','355ml*30EA*1box','EA','3000EA');
Insert into MES.EDCTS (PRO_CD,PRO_NM,PRO_SPEC,PRO_UNIT,SAF_RTC) values ('PROSOL001','커피믹스','10g*60stick*6EA*1box','EA','600EA');
Insert into MES.EDCTS (PRO_CD,PRO_NM,PRO_SPEC,PRO_UNIT,SAF_RTC) values ('PROLIQ004','카페모카','355ml*30EA*1box','EA','3000EA');
REM INSERTING into MES.EDCTS_IST
SET DEFINE OFF;
Insert into MES.EDCTS_IST (PRO_IST_NO,PRO_CD,PRO_IST_DT,PRO_IST_CNT,PRO_LOT_NO) values ('2304170002','PROLIQ002',to_date('23/04/17','RR/MM/DD'),500,'LOT230417PROLIQ002');
Insert into MES.EDCTS_IST (PRO_IST_NO,PRO_CD,PRO_IST_DT,PRO_IST_CNT,PRO_LOT_NO) values ('2304170003','PROLIQ002',to_date('23/04/17','RR/MM/DD'),500,'LOT230417PROLIQ002');
Insert into MES.EDCTS_IST (PRO_IST_NO,PRO_CD,PRO_IST_DT,PRO_IST_CNT,PRO_LOT_NO) values ('2304170004','PROLIQ002',to_date('23/04/17','RR/MM/DD'),500,'LOT230417PROLIQ002');
Insert into MES.EDCTS_IST (PRO_IST_NO,PRO_CD,PRO_IST_DT,PRO_IST_CNT,PRO_LOT_NO) values ('2304170005','PROLIQ002',to_date('23/04/17','RR/MM/DD'),500,'LOT230417PROLIQ002');
Insert into MES.EDCTS_IST (PRO_IST_NO,PRO_CD,PRO_IST_DT,PRO_IST_CNT,PRO_LOT_NO) values ('2304180001','PROLIQ002',to_date('23/04/18','RR/MM/DD'),500,'LOT230418PROLIQ002');
Insert into MES.EDCTS_IST (PRO_IST_NO,PRO_CD,PRO_IST_DT,PRO_IST_CNT,PRO_LOT_NO) values ('2304180002','PROLIQ001',to_date('23/04/18','RR/MM/DD'),500,'LOT230418PROLIQ001');
Insert into MES.EDCTS_IST (PRO_IST_NO,PRO_CD,PRO_IST_DT,PRO_IST_CNT,PRO_LOT_NO) values ('2304180002','PROLIQ002',to_date('23/04/18','RR/MM/DD'),500,'LOT230418PROLIQ002');
Insert into MES.EDCTS_IST (PRO_IST_NO,PRO_CD,PRO_IST_DT,PRO_IST_CNT,PRO_LOT_NO) values ('2304190001','PROLIQ001',to_date('23/04/19','RR/MM/DD'),978,'LOT230419PROLIQ001');
Insert into MES.EDCTS_IST (PRO_IST_NO,PRO_CD,PRO_IST_DT,PRO_IST_CNT,PRO_LOT_NO) values ('2304200001','PROLIQ002',to_date('23/04/20','RR/MM/DD'),985,'LOT230420PROLIQ002');
Insert into MES.EDCTS_IST (PRO_IST_NO,PRO_CD,PRO_IST_DT,PRO_IST_CNT,PRO_LOT_NO) values ('2304200002','PROLIQ003',to_date('23/04/20','RR/MM/DD'),20,'LOT230420PROLIQ003');
REM INSERTING into MES.EDCTS_STAN
SET DEFINE OFF;
Insert into MES.EDCTS_STAN (STAN_CD,STAN_NM,STAN_IT,STAN_PS) values ('LEATEST','납 함량 검사','납 함량','0.0002');
Insert into MES.EDCTS_STAN (STAN_CD,STAN_NM,STAN_IT,STAN_PS) values ('TINTEST','주석 함량 검사','주석 함량','0.015');
Insert into MES.EDCTS_STAN (STAN_CD,STAN_NM,STAN_IT,STAN_PS) values ('TARTEST','타르색소 함량 검사','타르색소 함량','0');
Insert into MES.EDCTS_STAN (STAN_CD,STAN_NM,STAN_IT,STAN_PS) values ('BACTEST','세균 수 검사','세균 수','1000');
Insert into MES.EDCTS_STAN (STAN_CD,STAN_NM,STAN_IT,STAN_PS) values ('COLTEST','대장균군 검사','대장균군','10');
REM INSERTING into MES.EMP
SET DEFINE OFF;
Insert into MES.EMP (EMP_CODE,EMP_ID,EMP_PW,EMP_NAME,EMP_PHONE,EMP_EMAIL,EMP_H_DATE,EMP_L_DATE,EMP_AUTH) values ('EMPADM001','admin','$2a$10$txHpN9zYzhWNB3pJdsxs2uVBYfxzlhO1ClHxk8yyZvlFzIRujbTYW','관리자','4290','a@gmail.com',to_date('23/04/04','RR/MM/DD'),null,'ROLE_ADMIN');
Insert into MES.EMP (EMP_CODE,EMP_ID,EMP_PW,EMP_NAME,EMP_PHONE,EMP_EMAIL,EMP_H_DATE,EMP_L_DATE,EMP_AUTH) values ('EMPMAM001',null,null,'김철수 부장',null,null,null,null,'자재부장');
Insert into MES.EMP (EMP_CODE,EMP_ID,EMP_PW,EMP_NAME,EMP_PHONE,EMP_EMAIL,EMP_H_DATE,EMP_L_DATE,EMP_AUTH) values ('EMPMAT001',null,null,'안병살 사원',null,null,null,null,'자재사원');
Insert into MES.EMP (EMP_CODE,EMP_ID,EMP_PW,EMP_NAME,EMP_PHONE,EMP_EMAIL,EMP_H_DATE,EMP_L_DATE,EMP_AUTH) values ('EMPPRD001',null,null,'홍길동 사원',null,null,null,null,'생산사원');
Insert into MES.EMP (EMP_CODE,EMP_ID,EMP_PW,EMP_NAME,EMP_PHONE,EMP_EMAIL,EMP_H_DATE,EMP_L_DATE,EMP_AUTH) values ('EMPPRM001',null,null,'허균 부장',null,null,null,null,'생산부장');
Insert into MES.EMP (EMP_CODE,EMP_ID,EMP_PW,EMP_NAME,EMP_PHONE,EMP_EMAIL,EMP_H_DATE,EMP_L_DATE,EMP_AUTH) values ('EMPSAM001',null,null,'신영만 부장',null,null,null,null,'영업부장');
Insert into MES.EMP (EMP_CODE,EMP_ID,EMP_PW,EMP_NAME,EMP_PHONE,EMP_EMAIL,EMP_H_DATE,EMP_L_DATE,EMP_AUTH) values ('EMPSAP001',null,null,'신짱구 사원',null,null,null,null,'영업사원');
Insert into MES.EMP (EMP_CODE,EMP_ID,EMP_PW,EMP_NAME,EMP_PHONE,EMP_EMAIL,EMP_H_DATE,EMP_L_DATE,EMP_AUTH) values ('EMPssss',null,null,'sssss',null,null,null,null,null);
REM INSERTING into MES.EQM
SET DEFINE OFF;
Insert into MES.EQM (EQM_CD,EQM_NM,EQM_IST_DT,CHK_PRD,EQM_TYPE,EQM_AVAIL) values ('EQMCMB001','배합기',to_date('23/04/12','RR/MM/DD'),30,'배합기','Y');
Insert into MES.EQM (EQM_CD,EQM_NM,EQM_IST_DT,CHK_PRD,EQM_TYPE,EQM_AVAIL) values ('EQMDRY001','분무 건조기',to_date('23/04/12','RR/MM/DD'),30,'건조기','Y');
Insert into MES.EQM (EQM_CD,EQM_NM,EQM_IST_DT,CHK_PRD,EQM_TYPE,EQM_AVAIL) values ('EQMETR001','추출기',to_date('23/04/12','RR/MM/DD'),30,'추출기','Y');
Insert into MES.EQM (EQM_CD,EQM_NM,EQM_IST_DT,CHK_PRD,EQM_TYPE,EQM_AVAIL) values ('EQMFRZ001','동결기',to_date('23/04/12','RR/MM/DD'),30,'동결기','Y');
Insert into MES.EQM (EQM_CD,EQM_NM,EQM_IST_DT,CHK_PRD,EQM_TYPE,EQM_AVAIL) values ('EQMGRN001','그라인딩기2',to_date('23/04/12','RR/MM/DD'),30,'그라인딩기','Y');
Insert into MES.EQM (EQM_CD,EQM_NM,EQM_IST_DT,CHK_PRD,EQM_TYPE,EQM_AVAIL) values ('EQMRST001','로스팅기',to_date('23/04/12','RR/MM/DD'),30,'로스팅기','Y');
Insert into MES.EQM (EQM_CD,EQM_NM,EQM_IST_DT,CHK_PRD,EQM_TYPE,EQM_AVAIL) values ('EQMWRP001','포장기',to_date('23/04/12','RR/MM/DD'),30,'포장기','Y');
Insert into MES.EQM (EQM_CD,EQM_NM,EQM_IST_DT,CHK_PRD,EQM_TYPE,EQM_AVAIL) values ('EQMCMB002','배합기2',to_date('23/04/12','RR/MM/DD'),30,'배합기','Y');
Insert into MES.EQM (EQM_CD,EQM_NM,EQM_IST_DT,CHK_PRD,EQM_TYPE,EQM_AVAIL) values ('EQMDRY002','분무 건조기2',to_date('23/04/12','RR/MM/DD'),30,'건조기','Y');
Insert into MES.EQM (EQM_CD,EQM_NM,EQM_IST_DT,CHK_PRD,EQM_TYPE,EQM_AVAIL) values ('EQMETR002','추출기2',to_date('23/04/12','RR/MM/DD'),30,'추출기','Y');
Insert into MES.EQM (EQM_CD,EQM_NM,EQM_IST_DT,CHK_PRD,EQM_TYPE,EQM_AVAIL) values ('EQMFRZ002','동결기2',to_date('23/04/12','RR/MM/DD'),30,'동결기','Y');
Insert into MES.EQM (EQM_CD,EQM_NM,EQM_IST_DT,CHK_PRD,EQM_TYPE,EQM_AVAIL) values ('EQMRST002','로스팅기2',to_date('23/04/12','RR/MM/DD'),30,'로스팅기','Y');
Insert into MES.EQM (EQM_CD,EQM_NM,EQM_IST_DT,CHK_PRD,EQM_TYPE,EQM_AVAIL) values ('EQMWRP002','포장기2',to_date('23/04/12','RR/MM/DD'),30,'포장기','Y');
Insert into MES.EQM (EQM_CD,EQM_NM,EQM_IST_DT,CHK_PRD,EQM_TYPE,EQM_AVAIL) values ('EQMGRN002','그라인딩기2',to_date('23/04/12','RR/MM/DD'),30,'그라인딩기','Y');
REM INSERTING into MES.INFER
SET DEFINE OFF;
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRPRC001','공정 중 불량',5,'PRCETR001',3);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRPRC001','공정 중 불량',10,'PRCCMB002',13);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRPRC001','공정 중 불량',10,'PRCGRN001',14);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRPRC001','공정 중 불량',10,'PRCETR001',15);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRPRC001','공정 중 불량',5,'PRCCMB001',16);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRPRC001','공정 중 불량',5,'PRCRST002',17);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRPRC001','공정 중 불량',5,'PRCGRN001',18);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRPRC001','공정 중 불량',2,'PRCWRP001',19);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRTARTEST','품질 기준 초과',690,'PROLIQ002',20);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRLEATEST','품질 기준 초과',1475,'PROLIQ001',21);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRPRC001','공정 중 불량',10,'PRCCMB002',11);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRLEATEST','품질 기준 초과',1475,'PROLIQ001',22);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRLEATEST','품질 기준 초과',1475,'PROLIQ001',23);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRLEATEST','품질 기준 초과',1475,'PROLIQ001',24);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRLEATEST','품질 기준 초과',1475,'PROLIQ001',25);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRCOLTEST','품질 기준 초과',1475,'PROLIQ001',26);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRCOLTEST','품질 기준 초과',1475,'PROLIQ001',27);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRPRC001','공정 중 불량',10,'PRCCMB001',12);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRHYG001','자재 위생 불량',10,'RSCBEN001',1);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRMAK001','자재 제조 불량',20,'RSCBEN002',1);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRHYG001','자재 위생 불량',10,'RSCBEN001',2);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRMAK001','자재 제조 불량',20,'RSCBEN002',2);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRPAV001','자재 포장 불량',50,'RSCBEN003',1);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRPRC001','공정 중 불량',100,'RSCSYR001',20);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRHYG001','자재 위생 불량',10,'RSCMLK001',3);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRMAK001','자재 제조 불량',20,'RSCNOT001',3);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRPRC001','공정 중 불량',5,'PRCCMB002',28);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRPRC001','공정 중 불량',5,'PRCCMB002',29);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRPRC001','공정 중 불량',5,'PRCCMB002',30);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRPRC001','공정 중 불량',5,'PRCCMB002',31);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRPRC001','공정 중 불량',5,'PRCWRP001',32);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRPRC001','공정 중 불량',5,'PRCWRP001',33);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRPRC001','공정 중 불량',5,'PRCWRP001',34);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRPRC001','공정 중 불량',2,'PRCWRP001',35);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRPRC001','공정 중 불량',2,'PRCWRP001',36);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRBACTEST','세균 수 기준치 초과',20,'RSCSYR001',1);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRPRC001','공정 중 불량',5,'PRCRST002',37);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRPRC001','공정 중 불량',2,'PRCRST002',38);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRPRC001','공정 중 불량',2,'PRCGRN001',39);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRTARTEST','품질 기준 초과',16,'PROLIQ002',21);
Insert into MES.INFER (INFER_CD,INFER_NM,INFER_CNT,INFER_THI,INFER_SQ) values ('ERRBACTEST','세균 수 기준치 초과',10,'RSCRBN001',2);
REM INSERTING into MES.ORDER_DETAIL
SET DEFINE OFF;
Insert into MES.ORDER_DETAIL (ORDER_DETAIL_NO,ORDER_NO,PRO_CD,PRO_NM,ORDER_SIT_DETAIL,ORDER_CNT) values ('VNDPUR001042001','VNDPUR0010420','PROLIQ001','아메리카노','완료',100);
REM INSERTING into MES.ORDER_SHEET
SET DEFINE OFF;
Insert into MES.ORDER_SHEET (ORDER_NO,VEND_CD,VEND_NM,ORDER_DT,ORDER_SIT,PARRD_DT,PLAN_NO) values ('VNDPUR0010420','VNDPUR001','별다방',to_date('23/04/20','RR/MM/DD'),'완료',to_date('23/04/22','RR/MM/DD'),'PL230420002');
REM INSERTING into MES.PLANS
SET DEFINE OFF;
Insert into MES.PLANS (PLAN_CD,PRO_CD,PLAN_CNT,EX_START_DT,EX_END_DT) values ('PL230418001','PROLIQ002',100,to_date('23/04/18','RR/MM/DD'),to_date('23/05/25','RR/MM/DD'));
Insert into MES.PLANS (PLAN_CD,PRO_CD,PLAN_CNT,EX_START_DT,EX_END_DT) values ('PL230418002','PROLIQ003',300,to_date('23/04/20','RR/MM/DD'),to_date('23/06/29','RR/MM/DD'));
Insert into MES.PLANS (PLAN_CD,PRO_CD,PLAN_CNT,EX_START_DT,EX_END_DT) values ('PL230418002','PROLIQ001',200,to_date('23/04/20','RR/MM/DD'),to_date('23/06/29','RR/MM/DD'));
Insert into MES.PLANS (PLAN_CD,PRO_CD,PLAN_CNT,EX_START_DT,EX_END_DT) values ('PL230418002','PROLIQ002',400,to_date('23/04/20','RR/MM/DD'),to_date('23/06/29','RR/MM/DD'));
Insert into MES.PLANS (PLAN_CD,PRO_CD,PLAN_CNT,EX_START_DT,EX_END_DT) values ('PL230418001','PROLIQ003',100,to_date('23/04/18','RR/MM/DD'),to_date('23/05/25','RR/MM/DD'));
Insert into MES.PLANS (PLAN_CD,PRO_CD,PLAN_CNT,EX_START_DT,EX_END_DT) values ('PL230418001','PROLIQ001',1000,to_date('23/04/18','RR/MM/DD'),to_date('23/05/25','RR/MM/DD'));
Insert into MES.PLANS (PLAN_CD,PRO_CD,PLAN_CNT,EX_START_DT,EX_END_DT) values ('PL230418003','PROLIQ003',300,to_date('23/04/21','RR/MM/DD'),to_date('23/07/15','RR/MM/DD'));
Insert into MES.PLANS (PLAN_CD,PRO_CD,PLAN_CNT,EX_START_DT,EX_END_DT) values ('PL230418003','PROLIQ002',100,to_date('23/04/21','RR/MM/DD'),to_date('23/07/15','RR/MM/DD'));
Insert into MES.PLANS (PLAN_CD,PRO_CD,PLAN_CNT,EX_START_DT,EX_END_DT) values ('PL230418003','PROLIQ001',300,to_date('23/04/21','RR/MM/DD'),to_date('23/07/15','RR/MM/DD'));
Insert into MES.PLANS (PLAN_CD,PRO_CD,PLAN_CNT,EX_START_DT,EX_END_DT) values ('PL230418004','PROLIQ002',200,to_date('23/04/18','RR/MM/DD'),to_date('23/07/18','RR/MM/DD'));
Insert into MES.PLANS (PLAN_CD,PRO_CD,PLAN_CNT,EX_START_DT,EX_END_DT) values ('PL230418004','PROLIQ001',100,to_date('23/04/18','RR/MM/DD'),to_date('23/07/18','RR/MM/DD'));
Insert into MES.PLANS (PLAN_CD,PRO_CD,PLAN_CNT,EX_START_DT,EX_END_DT) values ('PL230420001','PROLIQ001',500,to_date('23/04/21','RR/MM/DD'),to_date('23/04/21','RR/MM/DD'));
Insert into MES.PLANS (PLAN_CD,PRO_CD,PLAN_CNT,EX_START_DT,EX_END_DT) values ('PL230420001','PROLIQ002',200,to_date('23/04/21','RR/MM/DD'),to_date('23/04/21','RR/MM/DD'));
Insert into MES.PLANS (PLAN_CD,PRO_CD,PLAN_CNT,EX_START_DT,EX_END_DT) values ('PL230420002','PROLIQ001',300,to_date('23/04/20','RR/MM/DD'),to_date('23/07/19','RR/MM/DD'));
REM INSERTING into MES.PLANS_HEADER
SET DEFINE OFF;
Insert into MES.PLANS_HEADER (PLAN_CD,PLAN_DT,PLAN_MANAGER,DIR_STATUS) values ('PL230418003',to_date('23/04/18','RR/MM/DD'),null,null);
Insert into MES.PLANS_HEADER (PLAN_CD,PLAN_DT,PLAN_MANAGER,DIR_STATUS) values ('PL230418001',to_date('23/04/18','RR/MM/DD'),null,'진행중');
Insert into MES.PLANS_HEADER (PLAN_CD,PLAN_DT,PLAN_MANAGER,DIR_STATUS) values ('PL230418002',to_date('23/04/18','RR/MM/DD'),null,null);
Insert into MES.PLANS_HEADER (PLAN_CD,PLAN_DT,PLAN_MANAGER,DIR_STATUS) values ('PL230418004',to_date('23/04/18','RR/MM/DD'),null,null);
Insert into MES.PLANS_HEADER (PLAN_CD,PLAN_DT,PLAN_MANAGER,DIR_STATUS) values ('PL230420001',to_date('23/04/20','RR/MM/DD'),null,null);
Insert into MES.PLANS_HEADER (PLAN_CD,PLAN_DT,PLAN_MANAGER,DIR_STATUS) values ('PL230420002',to_date('23/04/20','RR/MM/DD'),null,null);
REM INSERTING into MES.PRCS
SET DEFINE OFF;
Insert into MES.PRCS (PRCS_CD,PRCS_NM,EQM_TYPE,PRCS_EXPLAIN) values ('PRCCMB001','배합','배합기','테스트3');
Insert into MES.PRCS (PRCS_CD,PRCS_NM,EQM_TYPE,PRCS_EXPLAIN) values ('PRCCMB002','배합2','배합기','테스트1');
Insert into MES.PRCS (PRCS_CD,PRCS_NM,EQM_TYPE,PRCS_EXPLAIN) values ('PRCDRY001','분무 건조','건조기','테스트1');
Insert into MES.PRCS (PRCS_CD,PRCS_NM,EQM_TYPE,PRCS_EXPLAIN) values ('PRCDRY002','진공 건조','건조기','테스트1');
Insert into MES.PRCS (PRCS_CD,PRCS_NM,EQM_TYPE,PRCS_EXPLAIN) values ('PRCETR001','추출','추출기','테스트2');
Insert into MES.PRCS (PRCS_CD,PRCS_NM,EQM_TYPE,PRCS_EXPLAIN) values ('PRCETR002','추출2','추출기','테스트1');
Insert into MES.PRCS (PRCS_CD,PRCS_NM,EQM_TYPE,PRCS_EXPLAIN) values ('PRCFRZ001','동결','동결기','테스트1');
Insert into MES.PRCS (PRCS_CD,PRCS_NM,EQM_TYPE,PRCS_EXPLAIN) values ('PRCGRN001','그라인딩','그라인딩기','테스트1');
Insert into MES.PRCS (PRCS_CD,PRCS_NM,EQM_TYPE,PRCS_EXPLAIN) values ('PRCRST001','로스팅','로스팅기','테스트');
Insert into MES.PRCS (PRCS_CD,PRCS_NM,EQM_TYPE,PRCS_EXPLAIN) values ('PRCRST002','로스팅2','로스팅기','테스트1');
Insert into MES.PRCS (PRCS_CD,PRCS_NM,EQM_TYPE,PRCS_EXPLAIN) values ('PRCTES001','액상 커피 제품 검사','검사기','테스트1');
Insert into MES.PRCS (PRCS_CD,PRCS_NM,EQM_TYPE,PRCS_EXPLAIN) values ('PRCTES002','분말 커피 제품 검사','검사기','테스트1');
Insert into MES.PRCS (PRCS_CD,PRCS_NM,EQM_TYPE,PRCS_EXPLAIN) values ('PRCWRP001','포장','포장기','테스트4');
Insert into MES.PRCS (PRCS_CD,PRCS_NM,EQM_TYPE,PRCS_EXPLAIN) values ('PRCCMB003','배합3','배합기','테스트1');
REM INSERTING into MES.PRCS_RESULT
SET DEFINE OFF;
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414001','PROLIQ001','PRCRST001','EMPPRD001',to_date('23/04/17','RR/MM/DD'),to_date('23/04/17','RR/MM/DD'),0,1000,null,'EQMRST001');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414001','PROLIQ001','PRCGRN001','EMPPRD001',to_date('23/04/17','RR/MM/DD'),to_date('23/04/17','RR/MM/DD'),5,1000,null,'EQMGRN001');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414001','PROLIQ001','PRCETR001','EMPPRD001',to_date('23/04/17','RR/MM/DD'),to_date('23/04/17','RR/MM/DD'),5,995,null,'EQMETR001');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414001','PROLIQ001','PRCCMB001','EMPPRD001',to_date('23/04/18','RR/MM/DD'),to_date('23/04/18','RR/MM/DD'),0,990,null,'EQMCMB001');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414001','PROLIQ001','PRCWRP001','EMPPRD001',to_date('23/04/18','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'),2,980,null,'EQMWRP001');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414001','PROLIQ002','PRCRST002','EMPPRD001',to_date('23/04/14','RR/MM/DD'),to_date('23/04/18','RR/MM/DD'),0,100,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414001','PROLIQ002','PRCGRN001','EMPPRD001',to_date('23/04/18','RR/MM/DD'),to_date('23/04/18','RR/MM/DD'),0,700,null,'EQMGRN001');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414001','PROLIQ002','PRCETR002','EMPPRD001',to_date('23/04/18','RR/MM/DD'),to_date('23/04/18','RR/MM/DD'),0,700,null,'EQMETR001');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414001','PROLIQ002','PRCCMB002','EMPPRD001',to_date('23/04/18','RR/MM/DD'),to_date('23/04/18','RR/MM/DD'),0,700,null,'EQMCMB001');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414001','PROLIQ002','PRCWRP001','EMPPRD001',to_date('23/04/19','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'),2,0,null,'EQMWRP001');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414001','PROLIQ003','PRCRST002','EMPPRD001',to_date('23/04/14','RR/MM/DD'),null,5,100,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414001','PROLIQ003','PRCGRN001',null,null,null,3,100,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414001','PROLIQ003','PRCETR002',null,null,null,6,100,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414001','PROLIQ003','PRCCMB003',null,null,null,4,100,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414001','PROLIQ003','PRCWRP001',null,null,null,7,100,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414001','PROLIQ001','PRCTES001','EMPPRD001',to_date('23/04/18','RR/MM/DD'),to_date('23/04/18','RR/MM/DD'),0,100,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414001','PROLIQ002','PRCTES001','EMPPRD001',to_date('23/04/19','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'),690,690,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414001','PROLIQ003','PRCTES001',null,null,null,1,100,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414002','PROLIQ001','PRCCMB001','EMPPRD001',to_date('23/04/18','RR/MM/DD'),to_date('23/04/18','RR/MM/DD'),0,1480,null,'EQMCMB002');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414002','PROLIQ001','PRCTES001','EMPPRD001',to_date('23/04/19','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'),1475,1475,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414002','PROLIQ001','PRCETR001','EMPPRD001',to_date('23/04/18','RR/MM/DD'),to_date('23/04/18','RR/MM/DD'),10,1490,null,'EQMETR002');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414002','PROLIQ001','PRCGRN001','EMPPRD001',to_date('23/04/18','RR/MM/DD'),to_date('23/04/18','RR/MM/DD'),10,1500,null,'EQMGRN001');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414002','PROLIQ001','PRCWRP001','EMPPRD001',to_date('23/04/19','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'),0,0,null,'EQMWRP001');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414002','PROLIQ001','PRCRST001','EMPPRD001',to_date('23/04/18','RR/MM/DD'),to_date('23/04/18','RR/MM/DD'),0,1500,null,'EQMRST001');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414002','PROLIQ002','PRCWRP001','EMPPRD001',to_date('23/04/19','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'),0,985,null,'EQMWRP002');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414002','PROLIQ002','PRCETR002','EMPPRD001',to_date('23/04/18','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'),0,990,null,'EQMETR002');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414002','PROLIQ002','PRCGRN001','EMPPRD001',to_date('23/04/18','RR/MM/DD'),to_date('23/04/18','RR/MM/DD'),5,995,null,'EQMGRN001');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414002','PROLIQ002','PRCRST002','EMPPRD001',to_date('23/04/18','RR/MM/DD'),to_date('23/04/18','RR/MM/DD'),5,1000,null,'EQMRST001');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414002','PROLIQ002','PRCCMB002','EMPPRD001',to_date('23/04/19','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'),5,990,null,'EQMCMB001');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414002','PROLIQ002','PRCTES001','EMPPRD001',to_date('23/04/19','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'),0,100,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414002','PROLIQ003','PRCETR002',null,null,null,6,100,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414002','PROLIQ003','PRCCMB003',null,null,null,4,100,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414002','PROLIQ003','PRCWRP001',null,null,null,7,100,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414002','PROLIQ003','PRCTES001',null,null,null,1,100,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414002','PROLIQ003','PRCGRN001',null,null,null,3,100,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414002','PROLIQ003','PRCRST002','EMPPRD001',to_date('23/04/14','RR/MM/DD'),null,5,100,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414001','PROLIQ001','LEATEST','EMPPRD001',to_date('23/04/18','RR/MM/DD'),to_date('23/04/18','RR/MM/DD'),0,980,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414001','PROLIQ002','LEATEST','EMPPRD001',to_date('23/04/18','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'),0,690,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414001','PROLIQ002','COLTEST','EMPPRD001',to_date('23/04/19','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'),0,690,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414001','PROLIQ002','BACTEST','EMPPRD001',to_date('23/04/19','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'),0,690,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414001','PROLIQ002','TINTEST','EMPPRD001',to_date('23/04/19','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'),0,690,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414001','PROLIQ002','TARTEST','EMPPRD001',to_date('23/04/19','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'),690,690,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414001','PROLIQ001','BACTEST','EMPPRD001',to_date('23/04/19','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'),0,980,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414001','PROLIQ001','COLTEST','EMPPRD001',to_date('23/04/19','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'),0,980,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414001','PROLIQ001','TARTEST','EMPPRD001',to_date('23/04/19','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'),0,980,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414001','PROLIQ001','TINTEST','EMPPRD001',to_date('23/04/19','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'),0,980,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414002','PROLIQ001','LEATEST','EMPPRD001',to_date('23/04/19','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'),1475,1475,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414002','PROLIQ001','COLTEST','EMPPRD001',to_date('23/04/19','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'),1475,1475,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414002','PROLIQ001','BACTEST','EMPPRD001',to_date('23/04/19','RR/MM/DD'),null,null,1475,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414002','PROLIQ002','LEATEST','EMPPRD001',to_date('23/04/19','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'),0,985,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414002','PROLIQ002','COLTEST','EMPPRD001',to_date('23/04/19','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'),0,985,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414002','PROLIQ002','BACTEST','EMPPRD001',to_date('23/04/19','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'),0,985,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414002','PROLIQ002','TINTEST','EMPPRD001',to_date('23/04/19','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'),0,985,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230414002','PROLIQ002','TARTEST','EMPPRD001',to_date('23/04/19','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'),0,985,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230420001','PROLIQ001','PRCETR001','EMPMAM001',to_date('23/04/20','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'),0,100,null,'EQMETR001');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230420001','PROLIQ001','PRCCMB001','EMPMAT001',to_date('23/04/20','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'),0,100,null,'EQMCMB001');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230420001','PROLIQ001','PRCTES001',null,null,null,null,null,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230420001','PROLIQ001','PRCWRP001',null,null,null,null,null,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230420001','PROLIQ002','PRCRST002','EMPSAP001',to_date('23/04/20','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'),2,20,null,'EQMRST001');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230420001','PROLIQ002','PRCGRN001','EMPSAP001',to_date('23/04/20','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'),2,18,null,'EQMGRN001');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230420001','PROLIQ002','PRCETR002','EMPADM001',to_date('23/04/20','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'),0,16,null,'EQMETR001');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230420001','PROLIQ002','PRCCMB002','EMPMAM001',to_date('23/04/20','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'),0,16,null,'EQMCMB001');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230420001','PROLIQ002','PRCTES001','EMPMAT001',to_date('23/04/20','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'),16,null,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230420001','PROLIQ002','PRCWRP001',null,null,null,null,null,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230420001','PROLIQ003','PRCRST002','EMPMAT001',to_date('23/04/20','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'),0,20,null,'EQMRST001');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230420001','PROLIQ003','PRCGRN001','EMPMAT001',to_date('23/04/20','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'),0,20,null,'EQMGRN001');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230420001','PROLIQ003','PRCETR002','EMPMAT001',to_date('23/04/20','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'),0,20,null,'EQMETR002');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230420001','PROLIQ001','PRCRST001','EMPMAT001',to_date('23/04/20','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'),0,100,null,'EQMRST001');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230420001','PROLIQ001','PRCGRN001','EMPMAT001',to_date('23/04/20','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'),0,100,null,'EQMGRN001');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230420001','PROLIQ003','PRCCMB003','EMPMAT001',to_date('23/04/20','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'),0,20,null,'EQMCMB001');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230420001','PROLIQ003','PRCTES001','EMPMAT001',to_date('23/04/20','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'),0,null,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230420001','PROLIQ003','PRCWRP001','EMPMAT001',to_date('23/04/20','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'),0,20,null,'EQMWRP001');
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230420001','PROLIQ002','LEATEST','EMPMAM001',to_date('23/04/20','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'),0,16,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230420001','PROLIQ002','COLTEST','EMPMAM001',to_date('23/04/20','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'),0,16,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230420001','PROLIQ002','BACTEST','EMPMAM001',to_date('23/04/20','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'),0,16,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230420001','PROLIQ002','TINTEST','EMPSAP001',to_date('23/04/20','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'),0,16,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230420001','PROLIQ002','TARTEST','EMPMAT001',to_date('23/04/20','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'),16,16,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230420001','PROLIQ003','LEATEST','EMPMAT001',to_date('23/04/20','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'),0,20,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230420001','PROLIQ003','COLTEST','EMPMAT001',to_date('23/04/20','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'),0,20,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230420001','PROLIQ003','BACTEST','EMPMAT001',to_date('23/04/20','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'),0,20,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230420001','PROLIQ003','TINTEST','EMPMAT001',to_date('23/04/20','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'),0,20,null,null);
Insert into MES.PRCS_RESULT (PR_ORDER_CD,PRO_CD,PRCS_CD,WORKER,WK_FR_DTTM,WK_TO_DTTM,INFER_CNT,PROD_CNT,NOTE,EQM_CD) values ('DIR230420001','PROLIQ003','TARTEST','EMPMAT001',to_date('23/04/20','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'),0,20,null,null);
REM INSERTING into MES.PROCESS_MATERIAL
SET DEFINE OFF;
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230414001','PROLIQ002','PRCGRN001','RSCRBN002','1000','1000');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230414001','PROLIQ002','PRCETR002','RSCWTR001','1000','1000');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230414001','PROLIQ002','PRCCMB002','RSCMLK001','1000','700');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230414001','PROLIQ002','PRCCMB002','RSCSYR001','1000','700');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230414001','PROLIQ002','PRCTES001','RSCNOT001','0','0');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230414001','PROLIQ002','PRCWRP001','RSCPET001','1000','0');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230420001','PROLIQ001','PRCETR001','RSCWTR001','100','100');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230414001','PROLIQ001','PRCRST001','RSCBEN001','1000','1000');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230414001','PROLIQ001','PRCGRN001','RSCRBN001','1000','1000');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230414001','PROLIQ001','PRCETR001','RSCWTR001','1000','1000');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230414001','PROLIQ001','PRCCMB001','RSCWTR001','1000','990');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230414001','PROLIQ001','PRCCMB001','RSCSYR001','1000','990');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230414001','PROLIQ001','PRCTES001','RSCNOT001','0','0');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230414001','PROLIQ001','PRCWRP001','RSCPET001','1000','980');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230414001','PROLIQ002','PRCRST002','RSCBEN002','1000','1000');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230420001','PROLIQ001','PRCCMB001','RSCSYR001','100','100');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230420001','PROLIQ001','PRCCMB001','RSCWTR001','100','100');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230420001','PROLIQ001','PRCTES001','RSCNOT001','100','100');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230420001','PROLIQ001','PRCCMB001','RSCBEN002','100','100');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230420001','PROLIQ001','PRCWRP001','RSCPET001','100','100');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230420001','PROLIQ002','PRCRST002','RSCBEN002','20','30');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230420001','PROLIQ002','PRCGRN001','RSCRBN002','20','20');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230420001','PROLIQ002','PRCETR002','RSCWTR001','20','20');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230420001','PROLIQ002','PRCCMB002','RSCSYR001','20','20');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230420001','PROLIQ002','PRCCMB002','RSCMLK001','20','20');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230420001','PROLIQ002','PRCTES001','RSCNOT001','20','20');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230420001','PROLIQ002','PRCWRP001','RSCPET001','20','20');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230420001','PROLIQ003','PRCRST002','RSCBEN002','20','20');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230420001','PROLIQ003','PRCGRN001','RSCRBN002','20','20');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230420001','PROLIQ003','PRCETR002','RSCWTR001','20','20');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230420001','PROLIQ003','PRCCMB003','RSCSYR002','20','20');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230420001','PROLIQ001','PRCRST001','RSCBEN001','100','100');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230420001','PROLIQ003','PRCCMB003','RSCMLK001','20','20');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230420001','PROLIQ001','PRCGRN001','RSCRBN001','100','100');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230420001','PROLIQ003','PRCTES001','RSCNOT001','20','20');
Insert into MES.PROCESS_MATERIAL (PR_ORDER_CD,PRO_CD,PRCS_CD,RSC_CD,RSC_TOTAL,RSC_USE) values ('DIR230420001','PROLIQ003','PRCWRP001','RSCPET001','20','20');
REM INSERTING into MES.PROCESS_TBL
SET DEFINE OFF;
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230414003','PROLIQ001','PRCWRP001',5,500,500,0,'2');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230414003','PROLIQ002','PRCWRP001',5,500,500,0,'2');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230414001','PROLIQ001','PRCRST001',1,1000,1000,0,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230414001','PROLIQ001','PRCGRN001',2,1000,995,5,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230414001','PROLIQ001','PRCETR001',3,995,990,5,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230414001','PROLIQ001','PRCCMB001',4,990,990,0,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230414001','PROLIQ001','PRCTES001',5,990,980,0,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230414001','PROLIQ001','PRCWRP001',6,980,978,2,'2');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230414001','PROLIQ002','PRCRST002',1,700,700,0,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230414001','PROLIQ002','PRCGRN001',2,700,700,0,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230414001','PROLIQ002','PRCETR002',3,700,700,0,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230414001','PROLIQ002','PRCCMB002',4,700,700,0,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230420001','PROLIQ001','PRCETR001',3,100,100,0,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230420001','PROLIQ001','PRCCMB001',4,100,100,0,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230414002','PROLIQ001','PRCRST001',1,1500,1500,0,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230414002','PROLIQ001','PRCGRN001',2,1500,1490,10,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230414002','PROLIQ001','PRCETR001',3,1490,1480,10,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230414002','PROLIQ001','PRCCMB001',4,1480,1480,0,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230420001','PROLIQ001','PRCTES001',5,100,null,null,'0');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230420001','PROLIQ001','PRCWRP001',6,null,null,null,'0');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230414002','PROLIQ002','PRCRST002',1,1000,995,5,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230414002','PROLIQ002','PRCGRN001',2,995,990,5,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230414002','PROLIQ002','PRCETR002',3,990,990,0,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230414002','PROLIQ002','PRCCMB002',4,990,985,5,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230414002','PROLIQ002','PRCTES001',5,985,985,0,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230414002','PROLIQ002','PRCWRP001',6,985,985,0,'2');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230417001','PROLIQ001','PRCCMB001',4,null,20,0,null);
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230417001','PROLIQ002','PRCCMB002',4,null,20,0,null);
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230417001','PROLIQ003','PRCCMB003',4,null,20,0,null);
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230418001','PROLIQ001','PRCCMB001',4,null,20,0,null);
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230418001','PROLIQ002','PRCCMB002',4,null,20,0,null);
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230418001','PROLIQ003','PRCCMB003',4,null,20,0,null);
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230418001','PROLIQ003','PRCWRP001',6,null,50,0,null);
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230418001','PROLIQ001','PRCWRP001',6,null,50,0,null);
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230418001','PROLIQ002','PRCWRP001',6,null,50,0,null);
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230417001','PROLIQ001','PRCWRP001',6,null,20,0,null);
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230417001','PROLIQ002','PRCWRP001',6,null,20,0,null);
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230417001','PROLIQ003','PRCWRP001',6,null,20,0,null);
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230420001','PROLIQ002','PRCRST002',1,20,18,2,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230420001','PROLIQ002','PRCGRN001',2,18,16,2,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230420001','PROLIQ002','PRCETR002',3,16,16,0,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230420001','PROLIQ002','PRCCMB002',4,16,16,0,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230420001','PROLIQ002','PRCTES001',5,16,0,16,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230420001','PROLIQ002','PRCWRP001',6,0,0,16,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230420001','PROLIQ003','PRCRST002',1,20,20,0,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230420001','PROLIQ003','PRCGRN001',2,20,20,0,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230420001','PROLIQ003','PRCETR002',3,20,20,0,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230420001','PROLIQ001','PRCRST001',1,100,100,0,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230420001','PROLIQ001','PRCGRN001',2,100,100,0,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230420001','PROLIQ003','PRCCMB003',4,20,20,0,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230420001','PROLIQ003','PRCTES001',5,20,20,0,'1');
Insert into MES.PROCESS_TBL (PR_ORDER_CD,PRO_CD,PRCS_CD,BOM_SQ,STOCK,OUTPUT,BAD_QUANTITY,COMPLETED) values ('DIR230420001','PROLIQ003','PRCWRP001',6,20,20,0,'2');
REM INSERTING into MES.PRODUCT_INSPECTION
SET DEFINE OFF;
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230414002','PROLIQ002','LEATEST','985','납 함량','0.00001','Y');
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230414002','PROLIQ002','TINTEST','985','주석 함량','0.007','Y');
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230414002','PROLIQ002','TARTEST','985','타르색소 함량','0','Y');
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230414002','PROLIQ002','BACTEST','985','세균 수','10','Y');
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230414002','PROLIQ002','COLTEST','985','대장균군','5','Y');
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230420001','PROLIQ003','LEATEST','20','납 함량','0.00001','Y');
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230420001','PROLIQ003','TINTEST','20','주석 함량','0.001','Y');
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230420001','PROLIQ003','TARTEST','20','타르색소 함량','0','Y');
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230420001','PROLIQ003','BACTEST','20','세균 수','1','Y');
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230420001','PROLIQ003','COLTEST','20','대장균군','1','Y');
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230420001','PROLIQ002','LEATEST','16','납 함량','0.00005','Y');
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230420001','PROLIQ002','TINTEST','16','주석 함량','0.002','Y');
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230420001','PROLIQ002','TARTEST','16','타르색소 함량','2','N');
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230420001','PROLIQ002','BACTEST','16','세균 수','2','Y');
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230420001','PROLIQ002','COLTEST','16','대장균군','2','Y');
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230414001','PROLIQ002','LEATEST','690','납 함량','0.0001','Y');
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230414001','PROLIQ001','LEATEST','980','납 함량','0.0001','Y');
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230414001','PROLIQ001','TINTEST','980','주석 함량','0.007','Y');
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230414001','PROLIQ001','TARTEST','980','타르색소 함량','0','Y');
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230414001','PROLIQ001','BACTEST','980','세균 수','327','Y');
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230414001','PROLIQ001','COLTEST','980','대장균군','5','Y');
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230414001','PROLIQ002','TINTEST','690','주석 함량','0.013','Y');
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230414001','PROLIQ002','TARTEST','690','타르색소 함량','1','N');
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230414001','PROLIQ002','BACTEST','690','세균 수','274','Y');
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230414001','PROLIQ002','COLTEST','690','대장균군','7','Y');
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230414002','PROLIQ001','LEATEST','1475','납 함량','1','N');
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230414002','PROLIQ001','TINTEST','1475','주석 함량',null,null);
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230414002','PROLIQ001','TARTEST','1475','타르색소 함량',null,null);
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230414002','PROLIQ001','BACTEST','1475','세균 수',null,null);
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230414002','PROLIQ001','COLTEST','1475','대장균군','11','N');
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230420001','PROLIQ001','LEATEST','100','납 함량',null,null);
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230420001','PROLIQ001','TINTEST','100','주석 함량',null,null);
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230420001','PROLIQ001','TARTEST','100','타르색소 함량',null,null);
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230420001','PROLIQ001','BACTEST','100','세균 수',null,null);
Insert into MES.PRODUCT_INSPECTION (PR_ORDER_CD,PRO_CD,TEST_CD,TEST_CNT,TEST_ITEM,TEST_AMT,TEST_PS_OR_NOT) values ('DIR230420001','PROLIQ001','COLTEST','100','대장균군',null,null);
REM INSERTING into MES.PRO_OUST
SET DEFINE OFF;
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304140001','PROLIQ001','LOT230401AME0001',to_date('23/04/14','RR/MM/DD'),100,'VNDPUR0010411','VNDPUR001041102 ');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304140002','PROLIQ003','LOT230401VA0001',to_date('23/04/14','RR/MM/DD'),300,'VNDPUR0010411','VNDPUR001041103');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304140003','PROLIQ001','LOT230401AME0003',to_date('23/04/14','RR/MM/DD'),200,'VNDTRA0010411','VNDTRA001041102');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304140004','PROLIQ002','LOT230401LA0001',to_date('23/04/14','RR/MM/DD'),200,'VNDPUR0010411','VNDPUR001041101');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304140005','PROLIQ001','LOT230401AME0001',to_date('23/04/14','RR/MM/DD'),400,'VNDTRA0020411','VNDTRA002041101');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304140006','PROLIQ002','LOT230401LA0001',to_date('23/04/14','RR/MM/DD'),100,'VNDTRA0010411','VNDTRA001041101');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304140007','PROLIQ001','LOT230414PROLIQ001',to_date('23/04/14','RR/MM/DD'),500,'VNDTRA0010414','VNDTRA001041401');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304140008','PROLIQ001','LOT230401AME0002',to_date('23/04/14','RR/MM/DD'),200,'VNDSAL0010414','VNDSAL001041401');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304170001','PROLIQ002','LOT230401LA0001',to_date('23/04/17','RR/MM/DD'),100,'VNDSAL0010414','VNDSAL001041402');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304170002','PROLIQ002','LOT230401LA0002',to_date('23/04/17','RR/MM/DD'),100,'VNDSAL0010414','VNDSAL001041402');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304170003','PROLIQ002','LOT230401LA0001',to_date('23/04/17','RR/MM/DD'),100,'VNDPUR0010414','VNDPUR001041402');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304170004','PROLIQ002','LOT230401LA0002',to_date('23/04/17','RR/MM/DD'),0,'VNDPUR0010414','VNDPUR001041402');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304170005','PROLIQ003','LOT230401VA0001',to_date('23/04/17','RR/MM/DD'),50,'VNDPUR0010414','VNDPUR001041403');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304170006','PROLIQ003','LOT230401VA0001',to_date('23/04/17','RR/MM/DD'),50,'VNDPUR0010414','VNDPUR001041403');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304170007','PROLIQ003','LOT230401VA0001',to_date('23/04/17','RR/MM/DD'),100,'VNDTRA0010411','VNDTRA001041103');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304170008','PROLIQ003','LOT230401VA0002',to_date('23/04/17','RR/MM/DD'),100,'VNDTRA0010411','VNDTRA001041103');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304170009','PROLIQ003','LOT230401VA0002',to_date('23/04/17','RR/MM/DD'),100,'VNDTRA0010411','VNDTRA001041103');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304170010','PROLIQ001','LOT230401AME0001',to_date('23/04/17','RR/MM/DD'),100,'VNDPUR0010414','VNDPUR001041401');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304170011','PROLIQ001','LOT230401AME0001',to_date('23/04/17','RR/MM/DD'),100,'VNDPUR0010414','VNDPUR001041401');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304170012','PROLIQ001','LOT230401AME0001',to_date('23/04/17','RR/MM/DD'),200,'VNDPUR0010414','VNDPUR001041401');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304170013','PROLIQ001','LOT230401AME0001',to_date('23/04/17','RR/MM/DD'),100,'VNDPUR0010414','VNDPUR001041401');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304170014','PROLIQ001','LOT230401AME0001',to_date('23/04/17','RR/MM/DD'),50,'VNDPUR0010417','VNDPUR001041701');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304170015','PROLIQ001','LOT230401AME0001',to_date('23/04/17','RR/MM/DD'),50,'VNDPUR0010417','VNDPUR001041701');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304180001','PROLIQ002','LOT230401LA0003',to_date('23/04/18','RR/MM/DD'),0,'VNDPUR0010418','VNDPUR001041802');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304180002','PROLIQ002','LOT230418PROLIQ002',to_date('23/04/18','RR/MM/DD'),0,'VNDPUR0010418','VNDPUR001041802');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304180003','PROLIQ002','LOT230418PROLIQ002',to_date('23/04/18','RR/MM/DD'),0,'VNDPUR0010418','VNDPUR001041802');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304180004','PROLIQ002','LOT230418PROLIQ002',to_date('23/04/18','RR/MM/DD'),0,'VNDPUR0010418','VNDPUR001041802');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304180022','PROLIQ002','LOT230401LA0003',to_date('23/04/18','RR/MM/DD'),5,'VNDSAL0010418','VNDSAL001041801');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304180023','PROLIQ002','LOT230401LA0003',to_date('23/04/18','RR/MM/DD'),5,'VNDSAL0010418','VNDSAL001041802');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304180007','PROLIQ003','LOT230401VA0002',to_date('23/04/18','RR/MM/DD'),0,'VNDPUR0010418','VNDPUR001041803');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304180024','PROLIQ002','LOT230401LA0003',to_date('23/04/18','RR/MM/DD'),5,'VNDSAL0010418','VNDSAL001041802');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304200001','PROLIQ001','LOT230414PROLIQ001',to_date('23/04/20','RR/MM/DD'),0,'VNDPUR0010420','VNDPUR001042001');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304180010','PROLIQ002','LOT230401LA0003',to_date('23/04/18','RR/MM/DD'),0,'VNDPUR0010418','VNDPUR001041803');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304180011','PROLIQ002','LOT230401LA0003',to_date('23/04/18','RR/MM/DD'),0,'VNDPUR0010418','VNDPUR001041803');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304200002','PROLIQ001','LOT230401AME0003',to_date('23/04/20','RR/MM/DD'),100,'VNDPUR0010420','VNDPUR001042001');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304180013','PROLIQ002','LOT230401LA0003',to_date('23/04/18','RR/MM/DD'),5,'VNDPUR0010418','VNDPUR001041803');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304180014','PROLIQ002','LOT230401LA0003',to_date('23/04/18','RR/MM/DD'),5,'VNDPUR0010418','VNDPUR001041802');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304190001','PROLIQ002','LOT230418PROLIQ002',to_date('23/04/19','RR/MM/DD'),5,'VNDSAL0010419','VNDSAL001041903');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304180016','PROLIQ002','LOT230401LA0003',to_date('23/04/18','RR/MM/DD'),10,'VNDTRA0010418','VNDTRA001041801');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304180017','PROLIQ002','LOT230401LA0003',to_date('23/04/18','RR/MM/DD'),0,'VNDTRA0010418','VNDTRA001041801');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304180018','PROLIQ002','LOT230401LA0003',to_date('23/04/18','RR/MM/DD'),10,'VNDTRA0010418','VNDTRA001041802');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304180019','PROLIQ002','LOT230401LA0003',to_date('23/04/18','RR/MM/DD'),0,'VNDTRA0010418','VNDTRA001041802');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304180020','PROLIQ002','LOT230401LA0003',to_date('23/04/18','RR/MM/DD'),0,'VNDTRA0010418','VNDTRA001041802');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304180021','PROLIQ002','LOT230401LA0003',to_date('23/04/18','RR/MM/DD'),10,'VNDTRA0010418','VNDTRA001041802');
Insert into MES.PRO_OUST (PRO_OUST_NO,PRO_CD,PRO_LOT_NO,PRO_OUST_DT,PRO_OUST_CNT,ORDER_NO,ORDER_DETAIL_NO) values ('2304190002','PROLIQ002','LOT230418PROLIQ002',to_date('23/04/19','RR/MM/DD'),5,'VNDSAL0010419','VNDSAL001041901');
REM INSERTING into MES.PRO_STC
SET DEFINE OFF;
Insert into MES.PRO_STC (PRO_LOT_NO,PRO_IST_NO,PRO_CD,LOT_CNT,PRO_EXP,PRO_WDT) values ('LOT230418PROLIQ002','2304180001','PROLIQ002',1000,to_date('23/04/25','RR/MM/DD'),to_date('23/04/18','RR/MM/DD'));
Insert into MES.PRO_STC (PRO_LOT_NO,PRO_IST_NO,PRO_CD,LOT_CNT,PRO_EXP,PRO_WDT) values ('LOT230418PROLIQ001','2304180002','PROLIQ001',1000,to_date('23/04/25','RR/MM/DD'),to_date('23/04/18','RR/MM/DD'));
Insert into MES.PRO_STC (PRO_LOT_NO,PRO_IST_NO,PRO_CD,LOT_CNT,PRO_EXP,PRO_WDT) values ('LOT230401AME0003','AME230401002','PROLIQ001',900,to_date('24/04/04','RR/MM/DD'),to_date('23/03/31','RR/MM/DD'));
Insert into MES.PRO_STC (PRO_LOT_NO,PRO_IST_NO,PRO_CD,LOT_CNT,PRO_EXP,PRO_WDT) values ('LOT230401VA0001','VA230401001','PROLIQ003',1000,to_date('24/04/04','RR/MM/DD'),to_date('23/03/31','RR/MM/DD'));
Insert into MES.PRO_STC (PRO_LOT_NO,PRO_IST_NO,PRO_CD,LOT_CNT,PRO_EXP,PRO_WDT) values ('LOT230401VA0002','VA230401002','PROLIQ003',1000,to_date('24/04/04','RR/MM/DD'),to_date('23/03/31','RR/MM/DD'));
Insert into MES.PRO_STC (PRO_LOT_NO,PRO_IST_NO,PRO_CD,LOT_CNT,PRO_EXP,PRO_WDT) values ('LOT230418PROLIQ002','2304180002','PROLIQ002',1000,to_date('23/04/25','RR/MM/DD'),to_date('23/04/18','RR/MM/DD'));
Insert into MES.PRO_STC (PRO_LOT_NO,PRO_IST_NO,PRO_CD,LOT_CNT,PRO_EXP,PRO_WDT) values ('LOT230401LA0001','LA230401001','PROLIQ002',1000,to_date('24/04/04','RR/MM/DD'),to_date('23/03/31','RR/MM/DD'));
Insert into MES.PRO_STC (PRO_LOT_NO,PRO_IST_NO,PRO_CD,LOT_CNT,PRO_EXP,PRO_WDT) values ('LOT230420PROLIQ003','2304200002','PROLIQ003',20,to_date('23/04/27','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'));
Insert into MES.PRO_STC (PRO_LOT_NO,PRO_IST_NO,PRO_CD,LOT_CNT,PRO_EXP,PRO_WDT) values ('LOT230401LA0003','LA230401003','PROLIQ002',1000,to_date('24/04/04','RR/MM/DD'),to_date('23/03/31','RR/MM/DD'));
Insert into MES.PRO_STC (PRO_LOT_NO,PRO_IST_NO,PRO_CD,LOT_CNT,PRO_EXP,PRO_WDT) values ('LOT230420PROLIQ002','2304200001','PROLIQ002',1000,to_date('23/04/27','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'));
REM INSERTING into MES.PR_ORDER
SET DEFINE OFF;
Insert into MES.PR_ORDER (PR_ORDER_CD,PRO_CD,ORDER_OUTPUT,PR_START_DT,PR_END_DT) values ('DIR230417001','PROLIQ002',50,to_date('23/04/17','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'));
Insert into MES.PR_ORDER (PR_ORDER_CD,PRO_CD,ORDER_OUTPUT,PR_START_DT,PR_END_DT) values ('DIR230417001','PROLIQ001',50,to_date('23/04/17','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'));
Insert into MES.PR_ORDER (PR_ORDER_CD,PRO_CD,ORDER_OUTPUT,PR_START_DT,PR_END_DT) values ('DIR230418001','PROLIQ003',50,to_date('23/04/18','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'));
Insert into MES.PR_ORDER (PR_ORDER_CD,PRO_CD,ORDER_OUTPUT,PR_START_DT,PR_END_DT) values ('DIR230418001','PROLIQ002',50,to_date('23/04/18','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'));
Insert into MES.PR_ORDER (PR_ORDER_CD,PRO_CD,ORDER_OUTPUT,PR_START_DT,PR_END_DT) values ('DIR230420001','PROLIQ002',20,to_date('23/04/20','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'));
Insert into MES.PR_ORDER (PR_ORDER_CD,PRO_CD,ORDER_OUTPUT,PR_START_DT,PR_END_DT) values ('DIR230420001','PROLIQ003',20,to_date('23/04/20','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'));
Insert into MES.PR_ORDER (PR_ORDER_CD,PRO_CD,ORDER_OUTPUT,PR_START_DT,PR_END_DT) values ('DIR230420001','PROLIQ001',100,to_date('23/04/20','RR/MM/DD'),null);
Insert into MES.PR_ORDER (PR_ORDER_CD,PRO_CD,ORDER_OUTPUT,PR_START_DT,PR_END_DT) values ('DIR230418001','PROLIQ001',50,to_date('23/04/18','RR/MM/DD'),to_date('23/04/20','RR/MM/DD'));
Insert into MES.PR_ORDER (PR_ORDER_CD,PRO_CD,ORDER_OUTPUT,PR_START_DT,PR_END_DT) values ('DIR230414002','PROLIQ002',1000,to_date('23/04/18','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'));
Insert into MES.PR_ORDER (PR_ORDER_CD,PRO_CD,ORDER_OUTPUT,PR_START_DT,PR_END_DT) values ('DIR230414002','PROLIQ001',1500,to_date('23/04/18','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'));
Insert into MES.PR_ORDER (PR_ORDER_CD,PRO_CD,ORDER_OUTPUT,PR_START_DT,PR_END_DT) values ('DIR230414001','PROLIQ002',700,to_date('23/04/14','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'));
Insert into MES.PR_ORDER (PR_ORDER_CD,PRO_CD,ORDER_OUTPUT,PR_START_DT,PR_END_DT) values ('DIR230414001','PROLIQ001',1000,to_date('23/04/17','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'));
Insert into MES.PR_ORDER (PR_ORDER_CD,PRO_CD,ORDER_OUTPUT,PR_START_DT,PR_END_DT) values ('DIR230417001','PROLIQ003',50,to_date('23/04/17','RR/MM/DD'),to_date('23/04/19','RR/MM/DD'));
REM INSERTING into MES.PR_ORDER_HEADER
SET DEFINE OFF;
Insert into MES.PR_ORDER_HEADER (PR_ORDER_CD,PR_ORDER_MANAGER,PR_ORDER_DT,PLAN_NO,DIR_START_DT,DIR_END_DT) values ('DIR230418001','문어숙회',to_date('23/04/18','RR/MM/DD'),'PL230418001',null,null);
Insert into MES.PR_ORDER_HEADER (PR_ORDER_CD,PR_ORDER_MANAGER,PR_ORDER_DT,PLAN_NO,DIR_START_DT,DIR_END_DT) values ('DIR230414001','허균부장',to_date('23/04/14','RR/MM/DD'),'PL230406001',null,null);
Insert into MES.PR_ORDER_HEADER (PR_ORDER_CD,PR_ORDER_MANAGER,PR_ORDER_DT,PLAN_NO,DIR_START_DT,DIR_END_DT) values ('DIR230414002','허균부장',to_date('23/04/14','RR/MM/DD'),'PL230406002',null,null);
Insert into MES.PR_ORDER_HEADER (PR_ORDER_CD,PR_ORDER_MANAGER,PR_ORDER_DT,PLAN_NO,DIR_START_DT,DIR_END_DT) values ('DIR230417001','문어숙회',to_date('23/04/17','RR/MM/DD'),'PL230418001',null,null);
Insert into MES.PR_ORDER_HEADER (PR_ORDER_CD,PR_ORDER_MANAGER,PR_ORDER_DT,PLAN_NO,DIR_START_DT,DIR_END_DT) values ('DIR230420001',null,to_date('23/04/20','RR/MM/DD'),'PL230418001',to_date('23/04/20','RR/MM/DD'),to_date('23/04/23','RR/MM/DD'));
REM INSERTING into MES.RETURN
SET DEFINE OFF;
REM INSERTING into MES.RSC
SET DEFINE OFF;
Insert into MES.RSC (RSC_CD,RSC_NM,RSC_TYP,RSC_SPEC,RSC_UNIT,SAF_RTC,RSC_AVAIL) values ('RSCBEN003','루왁','원두','10Kg*1box','Kg','1000Kg','Y');
Insert into MES.RSC (RSC_CD,RSC_NM,RSC_TYP,RSC_SPEC,RSC_UNIT,SAF_RTC,RSC_AVAIL) values ('RSCRBN002','로스팅된 라떼용 원두','로스팅원두','10Kg*1box','Kg','1000Kg','Y');
Insert into MES.RSC (RSC_CD,RSC_NM,RSC_TYP,RSC_SPEC,RSC_UNIT,SAF_RTC,RSC_AVAIL) values ('RSCBEN002','과테말라 라떼용 원두','원두','10Kg*1box','Kg','1000Kg','Y');
Insert into MES.RSC (RSC_CD,RSC_NM,RSC_TYP,RSC_SPEC,RSC_UNIT,SAF_RTC,RSC_AVAIL) values ('RSCSYR002','바닐라시럽','시럽','2L*1EA','L','500L','Y');
Insert into MES.RSC (RSC_CD,RSC_NM,RSC_TYP,RSC_SPEC,RSC_UNIT,SAF_RTC,RSC_AVAIL) values ('RSCNOT001','필요 자재 없음','재료없음','0','0','0','Y');
Insert into MES.RSC (RSC_CD,RSC_NM,RSC_TYP,RSC_SPEC,RSC_UNIT,SAF_RTC,RSC_AVAIL) values ('RSCBEN001','예가체프 아메리카노용 원두','원두','10Kg*1box','Kg','1000Kg','Y');
Insert into MES.RSC (RSC_CD,RSC_NM,RSC_TYP,RSC_SPEC,RSC_UNIT,SAF_RTC,RSC_AVAIL) values ('RSCMLK001','서울우유','우유 ','10L*1EA','L','2500L','Y');
Insert into MES.RSC (RSC_CD,RSC_NM,RSC_TYP,RSC_SPEC,RSC_UNIT,SAF_RTC,RSC_AVAIL) values ('RSCPET001','포장용기','포장용기','30EA*1box','EA','1200EA','Y');
Insert into MES.RSC (RSC_CD,RSC_NM,RSC_TYP,RSC_SPEC,RSC_UNIT,SAF_RTC,RSC_AVAIL) values ('RSCRBN001','로스팅된 아메리카노 원두','로스팅원두','10Kg*1box','Kg','1500Kg','Y');
Insert into MES.RSC (RSC_CD,RSC_NM,RSC_TYP,RSC_SPEC,RSC_UNIT,SAF_RTC,RSC_AVAIL) values ('RSCSYR001','무향시럽','시럽 ','2L*1EA','L','500L','Y');
Insert into MES.RSC (RSC_CD,RSC_NM,RSC_TYP,RSC_SPEC,RSC_UNIT,SAF_RTC,RSC_AVAIL) values ('RSCWTR001','아리수','물 ','18L*1box','L','1000L','Y');
REM INSERTING into MES.RSC_INFER
SET DEFINE OFF;
REM INSERTING into MES.RSC_INSP
SET DEFINE OFF;
Insert into MES.RSC_INSP (INSP_CD,INSP_DT,INSP_TSTR) values ('RSC2304200002',to_date('23/04/20','RR/MM/DD'),'EMPADM001');
Insert into MES.RSC_INSP (INSP_CD,INSP_DT,INSP_TSTR) values ('RSC2304190002',to_date('23/04/19','RR/MM/DD'),'EMPADM001');
Insert into MES.RSC_INSP (INSP_CD,INSP_DT,INSP_TSTR) values ('RSC2304190003',to_date('23/04/19','RR/MM/DD'),'EMPADM001');
Insert into MES.RSC_INSP (INSP_CD,INSP_DT,INSP_TSTR) values ('RSC2304190004',to_date('23/04/19','RR/MM/DD'),'EMPMAM001');
Insert into MES.RSC_INSP (INSP_CD,INSP_DT,INSP_TSTR) values ('RSC2304200001',to_date('23/04/20','RR/MM/DD'),'EMPADM001');
REM INSERTING into MES.RSC_INSP_DTL
SET DEFINE OFF;
Insert into MES.RSC_INSP_DTL (INSP_CD,ORDR_CD,RSC_CD,INSP_CNT,INSP_PASS_CNT,INSP_FAIL_CNT) values ('RSC2304190001','ORD20230418013','RSCBEN001',500,490,10);
Insert into MES.RSC_INSP_DTL (INSP_CD,ORDR_CD,RSC_CD,INSP_CNT,INSP_PASS_CNT,INSP_FAIL_CNT) values ('RSC2304190001','ORD20230418013','RSCBEN002',600,580,20);
Insert into MES.RSC_INSP_DTL (INSP_CD,ORDR_CD,RSC_CD,INSP_CNT,INSP_PASS_CNT,INSP_FAIL_CNT) values ('RSC2304190002','order002','RSCBEN003',100,50,50);
Insert into MES.RSC_INSP_DTL (INSP_CD,ORDR_CD,RSC_CD,INSP_CNT,INSP_PASS_CNT,INSP_FAIL_CNT) values ('RSC2304190003','ORD20230418016','RSCSYR001',500,400,100);
Insert into MES.RSC_INSP_DTL (INSP_CD,ORDR_CD,RSC_CD,INSP_CNT,INSP_PASS_CNT,INSP_FAIL_CNT) values ('RSC2304190004','ORD20230418007','RSCMLK001',500,490,10);
Insert into MES.RSC_INSP_DTL (INSP_CD,ORDR_CD,RSC_CD,INSP_CNT,INSP_PASS_CNT,INSP_FAIL_CNT) values ('RSC2304190004','ORD20230418007','RSCNOT001',500,480,20);
Insert into MES.RSC_INSP_DTL (INSP_CD,ORDR_CD,RSC_CD,INSP_CNT,INSP_PASS_CNT,INSP_FAIL_CNT) values ('RSC2304200001','ORD20230418016','RSCSYR001',500,480,20);
Insert into MES.RSC_INSP_DTL (INSP_CD,ORDR_CD,RSC_CD,INSP_CNT,INSP_PASS_CNT,INSP_FAIL_CNT) values ('RSC2304200002','ORD20230420003','RSCRBN001',600,590,10);
REM INSERTING into MES.RSC_IST
SET DEFINE OFF;
Insert into MES.RSC_IST (IST_CD,RSC_CD,IST_CNT,IST_DT) values ('IST2304190001','RSCBEN001',490,to_date('23/04/19','RR/MM/DD'));
Insert into MES.RSC_IST (IST_CD,RSC_CD,IST_CNT,IST_DT) values ('IST2304190002','RSCBEN001',490,to_date('23/04/19','RR/MM/DD'));
Insert into MES.RSC_IST (IST_CD,RSC_CD,IST_CNT,IST_DT) values ('IST2304190003','RSCBEN001',490,to_date('23/04/19','RR/MM/DD'));
Insert into MES.RSC_IST (IST_CD,RSC_CD,IST_CNT,IST_DT) values ('IST2304190004','RSCBEN001',490,to_date('23/04/19','RR/MM/DD'));
Insert into MES.RSC_IST (IST_CD,RSC_CD,IST_CNT,IST_DT) values ('IST2304190004','RSCBEN002',580,to_date('23/04/19','RR/MM/DD'));
Insert into MES.RSC_IST (IST_CD,RSC_CD,IST_CNT,IST_DT) values ('IST2304190005','RSCBEN003',50,to_date('23/04/19','RR/MM/DD'));
Insert into MES.RSC_IST (IST_CD,RSC_CD,IST_CNT,IST_DT) values ('IST2304190006','RSCBEN001',490,to_date('23/04/19','RR/MM/DD'));
Insert into MES.RSC_IST (IST_CD,RSC_CD,IST_CNT,IST_DT) values ('IST2304190007','RSCNOT001',480,to_date('23/04/19','RR/MM/DD'));
Insert into MES.RSC_IST (IST_CD,RSC_CD,IST_CNT,IST_DT) values ('IST2304190008','RSCNOT001',480,to_date('23/04/19','RR/MM/DD'));
Insert into MES.RSC_IST (IST_CD,RSC_CD,IST_CNT,IST_DT) values ('IST2304190009','RSCNOT001',480,to_date('23/04/19','RR/MM/DD'));
Insert into MES.RSC_IST (IST_CD,RSC_CD,IST_CNT,IST_DT) values ('IST2304190010','RSCNOT001',480,to_date('23/04/19','RR/MM/DD'));
Insert into MES.RSC_IST (IST_CD,RSC_CD,IST_CNT,IST_DT) values ('IST2304190011','RSCNOT001',480,to_date('23/04/19','RR/MM/DD'));
Insert into MES.RSC_IST (IST_CD,RSC_CD,IST_CNT,IST_DT) values ('IST2304190012','RSCNOT001',480,to_date('23/04/19','RR/MM/DD'));
Insert into MES.RSC_IST (IST_CD,RSC_CD,IST_CNT,IST_DT) values ('IST2304190013','RSCSYR001',400,to_date('23/04/19','RR/MM/DD'));
Insert into MES.RSC_IST (IST_CD,RSC_CD,IST_CNT,IST_DT) values ('IST2304200001','RSCSYR001',480,to_date('23/04/20','RR/MM/DD'));
Insert into MES.RSC_IST (IST_CD,RSC_CD,IST_CNT,IST_DT) values ('IST2304200002','RSCRBN001',590,to_date('23/04/20','RR/MM/DD'));
REM INSERTING into MES.RSC_LOT
SET DEFINE OFF;
Insert into MES.RSC_LOT (RSC_LOT_CD,RSC_INSP_CD,ORDR_CD,IST_CD,LOT_CNT,EXP_DT,RSC_CD) values ('LOTBEN001-00002','test002','order002','into002',10000,to_date('24/03/03','RR/MM/DD'),'RSCBEN001');
Insert into MES.RSC_LOT (RSC_LOT_CD,RSC_INSP_CD,ORDR_CD,IST_CD,LOT_CNT,EXP_DT,RSC_CD) values ('LOTSYR001-00001','test002','order002','into002',10000,to_date('24/01/01','RR/MM/DD'),'RSCSYR001');
Insert into MES.RSC_LOT (RSC_LOT_CD,RSC_INSP_CD,ORDR_CD,IST_CD,LOT_CNT,EXP_DT,RSC_CD) values ('LOTMLK001-00001','test002','order002','into002',9980,to_date('24/01/01','RR/MM/DD'),'RSCMLK001');
Insert into MES.RSC_LOT (RSC_LOT_CD,RSC_INSP_CD,ORDR_CD,IST_CD,LOT_CNT,EXP_DT,RSC_CD) values ('LOTRBN001-00002','test002','order002','into002',10000,to_date('24/03/03','RR/MM/DD'),'RSCRBN001');
Insert into MES.RSC_LOT (RSC_LOT_CD,RSC_INSP_CD,ORDR_CD,IST_CD,LOT_CNT,EXP_DT,RSC_CD) values ('LOTPET001-00001','test002','order002','into002',9980,to_date('24/01/01','RR/MM/DD'),'RSCPET001');
Insert into MES.RSC_LOT (RSC_LOT_CD,RSC_INSP_CD,ORDR_CD,IST_CD,LOT_CNT,EXP_DT,RSC_CD) values ('LOTSYR002-00002','test001','order001','into001',10000,to_date('24/03/03','RR/MM/DD'),'RSCSYR002');
Insert into MES.RSC_LOT (RSC_LOT_CD,RSC_INSP_CD,ORDR_CD,IST_CD,LOT_CNT,EXP_DT,RSC_CD) values ('LOTSYR002-00001','test002','order002','into002',9980,to_date('24/01/01','RR/MM/DD'),'RSCSYR002');
Insert into MES.RSC_LOT (RSC_LOT_CD,RSC_INSP_CD,ORDR_CD,IST_CD,LOT_CNT,EXP_DT,RSC_CD) values ('LOTBEN002-00001','test001','order001','into001',10000,to_date('24/01/01','RR/MM/DD'),'RSCBEN002');
Insert into MES.RSC_LOT (RSC_LOT_CD,RSC_INSP_CD,ORDR_CD,IST_CD,LOT_CNT,EXP_DT,RSC_CD) values ('LOTBEN002-00002','test002','order002','into002',10000,to_date('24/03/03','RR/MM/DD'),'RSCBEN002');
Insert into MES.RSC_LOT (RSC_LOT_CD,RSC_INSP_CD,ORDR_CD,IST_CD,LOT_CNT,EXP_DT,RSC_CD) values ('LOTRBN002-00002','test002','order002','into002',10000,to_date('24/03/03','RR/MM/DD'),'RSCRBN002');
Insert into MES.RSC_LOT (RSC_LOT_CD,RSC_INSP_CD,ORDR_CD,IST_CD,LOT_CNT,EXP_DT,RSC_CD) values ('LOTRBN002-00001','test001','order001','into001',9980,to_date('24/01/01','RR/MM/DD'),'RSCRBN002');
Insert into MES.RSC_LOT (RSC_LOT_CD,RSC_INSP_CD,ORDR_CD,IST_CD,LOT_CNT,EXP_DT,RSC_CD) values ('LOTWTR001-00002','test001','order001','into001',10000,to_date('24/03/03','RR/MM/DD'),'RSCWTR001');
Insert into MES.RSC_LOT (RSC_LOT_CD,RSC_INSP_CD,ORDR_CD,IST_CD,LOT_CNT,EXP_DT,RSC_CD) values ('LOTBEN001-00001','test001','order001','into001',10000,to_date('24/01/01','RR/MM/DD'),'RSCBEN001');
Insert into MES.RSC_LOT (RSC_LOT_CD,RSC_INSP_CD,ORDR_CD,IST_CD,LOT_CNT,EXP_DT,RSC_CD) values ('LOTSYR001-00002','test001','order001','into001',10000,to_date('24/03/03','RR/MM/DD'),'RSCSYR001');
Insert into MES.RSC_LOT (RSC_LOT_CD,RSC_INSP_CD,ORDR_CD,IST_CD,LOT_CNT,EXP_DT,RSC_CD) values ('LOTMLK001-00002','test001','order001','into001',10000,to_date('24/03/03','RR/MM/DD'),'RSCMLK001');
Insert into MES.RSC_LOT (RSC_LOT_CD,RSC_INSP_CD,ORDR_CD,IST_CD,LOT_CNT,EXP_DT,RSC_CD) values ('LOTRBN001-00001','test001','order001','into001',10000,to_date('24/01/01','RR/MM/DD'),'RSCRBN001');
Insert into MES.RSC_LOT (RSC_LOT_CD,RSC_INSP_CD,ORDR_CD,IST_CD,LOT_CNT,EXP_DT,RSC_CD) values ('LOTPET001-00002','test001','order001','into001',10000,to_date('24/03/03','RR/MM/DD'),'RSCPET001');
Insert into MES.RSC_LOT (RSC_LOT_CD,RSC_INSP_CD,ORDR_CD,IST_CD,LOT_CNT,EXP_DT,RSC_CD) values ('LOTWTR001-00001','test001','order001','into001',9780,to_date('24/01/01','RR/MM/DD'),'RSCWTR001');
Insert into MES.RSC_LOT (RSC_LOT_CD,RSC_INSP_CD,ORDR_CD,IST_CD,LOT_CNT,EXP_DT,RSC_CD) values ('LOTNOT001-00001','test001','order001','into001',10000,to_date('24/01/01','RR/MM/DD'),'RSCNOT001');
Insert into MES.RSC_LOT (RSC_LOT_CD,RSC_INSP_CD,ORDR_CD,IST_CD,LOT_CNT,EXP_DT,RSC_CD) values ('LOT230419RSCBEN001','RSC2304190001','ORD20230418013','IST2304190004',10000,to_date('23/04/26','RR/MM/DD'),'RSCBEN001');
Insert into MES.RSC_LOT (RSC_LOT_CD,RSC_INSP_CD,ORDR_CD,IST_CD,LOT_CNT,EXP_DT,RSC_CD) values ('LOT230419RSCBEN002','RSC2304190001','ORD20230418013','IST2304190004',9980,to_date('23/04/26','RR/MM/DD'),'RSCBEN002');
Insert into MES.RSC_LOT (RSC_LOT_CD,RSC_INSP_CD,ORDR_CD,IST_CD,LOT_CNT,EXP_DT,RSC_CD) values ('LOT230419RSCBEN003','RSC2304190002','order002','IST2304190005',10000,to_date('23/04/26','RR/MM/DD'),'RSCBEN003');
Insert into MES.RSC_LOT (RSC_LOT_CD,RSC_INSP_CD,ORDR_CD,IST_CD,LOT_CNT,EXP_DT,RSC_CD) values ('LOT230419RSCNOT001','RSC2304190004','ORD20230418007','IST2304190007',10000,to_date('23/04/26','RR/MM/DD'),'RSCNOT001');
Insert into MES.RSC_LOT (RSC_LOT_CD,RSC_INSP_CD,ORDR_CD,IST_CD,LOT_CNT,EXP_DT,RSC_CD) values ('LOT230419RSCSYR001','RSC2304190003','ORD20230418016','IST2304190013',9900,to_date('23/04/26','RR/MM/DD'),'RSCSYR001');
Insert into MES.RSC_LOT (RSC_LOT_CD,RSC_INSP_CD,ORDR_CD,IST_CD,LOT_CNT,EXP_DT,RSC_CD) values ('LOT230420RSCSYR001','RSC2304200001','ORD20230418016','IST2304200001',10000,to_date('23/04/27','RR/MM/DD'),'RSCSYR001');
Insert into MES.RSC_LOT (RSC_LOT_CD,RSC_INSP_CD,ORDR_CD,IST_CD,LOT_CNT,EXP_DT,RSC_CD) values ('LOT230420RSCRBN001','RSC2304200002','ORD20230420003','IST2304200002',10000,to_date('23/04/27','RR/MM/DD'),'RSCRBN001');
REM INSERTING into MES.RSC_ORDR
SET DEFINE OFF;
Insert into MES.RSC_ORDR (ORDR_CD,ORDR_REQ_DT,VEND_CD,ORDR_CK) values ('ORD20230418016',to_date('23/04/18','RR/MM/DD'),'VNDTRA001','1');
Insert into MES.RSC_ORDR (ORDR_CD,ORDR_REQ_DT,VEND_CD,ORDR_CK) values ('ORD20230420001',to_date('23/04/20','RR/MM/DD'),'VNDPUR001','0');
Insert into MES.RSC_ORDR (ORDR_CD,ORDR_REQ_DT,VEND_CD,ORDR_CK) values ('ORD20230420002',to_date('23/04/20','RR/MM/DD'),'VNDPUR001','0');
Insert into MES.RSC_ORDR (ORDR_CD,ORDR_REQ_DT,VEND_CD,ORDR_CK) values ('ORD20230420003',to_date('23/04/20','RR/MM/DD'),'VNDPUR001','1');
Insert into MES.RSC_ORDR (ORDR_CD,ORDR_REQ_DT,VEND_CD,ORDR_CK) values ('ORD20230420004',to_date('23/04/20','RR/MM/DD'),'VNDTRA001','0');
Insert into MES.RSC_ORDR (ORDR_CD,ORDR_REQ_DT,VEND_CD,ORDR_CK) values ('ORD20230418007',to_date('23/04/18','RR/MM/DD'),'VNDPUR001','0');
Insert into MES.RSC_ORDR (ORDR_CD,ORDR_REQ_DT,VEND_CD,ORDR_CK) values ('ORD20230418013',to_date('23/04/18','RR/MM/DD'),'VNDPUR001','1');
Insert into MES.RSC_ORDR (ORDR_CD,ORDR_REQ_DT,VEND_CD,ORDR_CK) values ('order001',to_date('23/04/15','RR/MM/DD'),'VNDPUR001','1');
Insert into MES.RSC_ORDR (ORDR_CD,ORDR_REQ_DT,VEND_CD,ORDR_CK) values ('order002',to_date('23/04/15','RR/MM/DD'),'VNDTRA001','0');
REM INSERTING into MES.RSC_ORDR_DTL
SET DEFINE OFF;
Insert into MES.RSC_ORDR_DTL (ORDR_CD,RSC_CD,ORDR_CNT,RMN_CNT,PAPRD_CMND_DT) values ('ORD20230420002','RSCWTR001',10,null,to_date('23/04/20','RR/MM/DD'));
Insert into MES.RSC_ORDR_DTL (ORDR_CD,RSC_CD,ORDR_CNT,RMN_CNT,PAPRD_CMND_DT) values ('ORD20230420003','RSCRBN001',600,null,to_date('23/04/20','RR/MM/DD'));
Insert into MES.RSC_ORDR_DTL (ORDR_CD,RSC_CD,ORDR_CNT,RMN_CNT,PAPRD_CMND_DT) values ('ORD20230418003','RSCPET001',300,null,to_date('23/04/06','RR/MM/DD'));
Insert into MES.RSC_ORDR_DTL (ORDR_CD,RSC_CD,ORDR_CNT,RMN_CNT,PAPRD_CMND_DT) values ('ORD20230418004','RSCPET001',100,null,to_date('23/04/04','RR/MM/DD'));
Insert into MES.RSC_ORDR_DTL (ORDR_CD,RSC_CD,ORDR_CNT,RMN_CNT,PAPRD_CMND_DT) values ('ORD20230420004','RSCMLK001',100000,null,to_date('23/04/12','RR/MM/DD'));
Insert into MES.RSC_ORDR_DTL (ORDR_CD,RSC_CD,ORDR_CNT,RMN_CNT,PAPRD_CMND_DT) values ('ORD20230418016','RSCSYR001',500,null,null);
Insert into MES.RSC_ORDR_DTL (ORDR_CD,RSC_CD,ORDR_CNT,RMN_CNT,PAPRD_CMND_DT) values ('ORD20230418005','RSCBEN001',400,null,to_date('23/04/05','RR/MM/DD'));
Insert into MES.RSC_ORDR_DTL (ORDR_CD,RSC_CD,ORDR_CNT,RMN_CNT,PAPRD_CMND_DT) values ('ORD20230418006','RSCPET001',500,null,to_date('23/04/19','RR/MM/DD'));
Insert into MES.RSC_ORDR_DTL (ORDR_CD,RSC_CD,ORDR_CNT,RMN_CNT,PAPRD_CMND_DT) values ('ORD20230418007','RSCNOT001',500,null,to_date('23/04/04','RR/MM/DD'));
Insert into MES.RSC_ORDR_DTL (ORDR_CD,RSC_CD,ORDR_CNT,RMN_CNT,PAPRD_CMND_DT) values ('ORD20230418007','RSCMLK001',500,null,to_date('23/04/04','RR/MM/DD'));
Insert into MES.RSC_ORDR_DTL (ORDR_CD,RSC_CD,ORDR_CNT,RMN_CNT,PAPRD_CMND_DT) values ('ORD20230418008','RSCBEN002',100,null,to_date('23/04/18','RR/MM/DD'));
Insert into MES.RSC_ORDR_DTL (ORDR_CD,RSC_CD,ORDR_CNT,RMN_CNT,PAPRD_CMND_DT) values ('ORD20230418008','RSCRBN001',100,null,to_date('23/04/18','RR/MM/DD'));
Insert into MES.RSC_ORDR_DTL (ORDR_CD,RSC_CD,ORDR_CNT,RMN_CNT,PAPRD_CMND_DT) values ('ORD20230418008','RSCWTR001',100,null,to_date('23/04/18','RR/MM/DD'));
Insert into MES.RSC_ORDR_DTL (ORDR_CD,RSC_CD,ORDR_CNT,RMN_CNT,PAPRD_CMND_DT) values ('ORD20230418009','RSCBEN002',500,null,to_date('23/04/05','RR/MM/DD'));
Insert into MES.RSC_ORDR_DTL (ORDR_CD,RSC_CD,ORDR_CNT,RMN_CNT,PAPRD_CMND_DT) values ('ORD20230418010','RSCWTR001',500,null,to_date('23/04/05','RR/MM/DD'));
Insert into MES.RSC_ORDR_DTL (ORDR_CD,RSC_CD,ORDR_CNT,RMN_CNT,PAPRD_CMND_DT) values ('ORD20230418011','RSCMLK001',500,null,to_date('23/04/05','RR/MM/DD'));
Insert into MES.RSC_ORDR_DTL (ORDR_CD,RSC_CD,ORDR_CNT,RMN_CNT,PAPRD_CMND_DT) values ('ORD20230418012','RSCRBN001',500,null,to_date('23/04/18','RR/MM/DD'));
Insert into MES.RSC_ORDR_DTL (ORDR_CD,RSC_CD,ORDR_CNT,RMN_CNT,PAPRD_CMND_DT) values ('ORD20230418013','RSCBEN002',600,null,to_date('23/04/18','RR/MM/DD'));
Insert into MES.RSC_ORDR_DTL (ORDR_CD,RSC_CD,ORDR_CNT,RMN_CNT,PAPRD_CMND_DT) values ('ORD20230418013','RSCBEN001',500,null,to_date('23/04/18','RR/MM/DD'));
Insert into MES.RSC_ORDR_DTL (ORDR_CD,RSC_CD,ORDR_CNT,RMN_CNT,PAPRD_CMND_DT) values ('ORD20230419001','RSCBEN002',50,null,to_date('23/04/19','RR/MM/DD'));
Insert into MES.RSC_ORDR_DTL (ORDR_CD,RSC_CD,ORDR_CNT,RMN_CNT,PAPRD_CMND_DT) values ('order002','RSCBEN003',200,1000,to_date('23/04/16','RR/MM/DD'));
Insert into MES.RSC_ORDR_DTL (ORDR_CD,RSC_CD,ORDR_CNT,RMN_CNT,PAPRD_CMND_DT) values ('order001','RSCRBN002',100,90,to_date('23/04/17','RR/MM/DD'));
Insert into MES.RSC_ORDR_DTL (ORDR_CD,RSC_CD,ORDR_CNT,RMN_CNT,PAPRD_CMND_DT) values ('ORD20230419002','RSCSYR002',10,null,null);
Insert into MES.RSC_ORDR_DTL (ORDR_CD,RSC_CD,ORDR_CNT,RMN_CNT,PAPRD_CMND_DT) values ('ORD20230419003','RSCWTR001',20,null,to_date('23/04/19','RR/MM/DD'));
Insert into MES.RSC_ORDR_DTL (ORDR_CD,RSC_CD,ORDR_CNT,RMN_CNT,PAPRD_CMND_DT) values ('ORD20230419004','RSCRBN001',1,null,to_date('23/04/19','RR/MM/DD'));
Insert into MES.RSC_ORDR_DTL (ORDR_CD,RSC_CD,ORDR_CNT,RMN_CNT,PAPRD_CMND_DT) values ('ORD20230419005','RSCRBN001',1,null,to_date('23/04/19','RR/MM/DD'));
Insert into MES.RSC_ORDR_DTL (ORDR_CD,RSC_CD,ORDR_CNT,RMN_CNT,PAPRD_CMND_DT) values ('ORD20230420001','RSCSYR001',100,null,to_date('23/04/20','RR/MM/DD'));
Insert into MES.RSC_ORDR_DTL (ORDR_CD,RSC_CD,ORDR_CNT,RMN_CNT,PAPRD_CMND_DT) values ('ORD20230420001','RSCMLK001',null,null,null);
REM INSERTING into MES.RSC_OUST
SET DEFINE OFF;
REM INSERTING into MES.RSC_OUST_DTL
SET DEFINE OFF;
REM INSERTING into MES.TEST_TBL
SET DEFINE OFF;
REM INSERTING into MES.VEND
SET DEFINE OFF;
Insert into MES.VEND (VEND_CD,VEND_NM,BIZNO,TELNO,VEND_ADDR,EMP_CODE) values ('VNDPUR001','별다방','123456789','123456789','대구',null);
Insert into MES.VEND (VEND_CD,VEND_NM,BIZNO,TELNO,VEND_ADDR,EMP_CODE) values ('VNDTRA001','한국통운',null,null,null,'EMPSAP001');
Insert into MES.VEND (VEND_CD,VEND_NM,BIZNO,TELNO,VEND_ADDR,EMP_CODE) values ('VNDSAL001','원두상사','123456789','123456789','테스트','EMPSAP001');
--------------------------------------------------------
--  DDL for Index INFER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."INFER_PK" ON "MES"."INFER" ("INFER_CD", "INFER_SQ") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_BASIC_CODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_BASIC_CODE" ON "MES"."BASIC_CODE" ("BASIC_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_BOM
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_BOM" ON "MES"."BOM" ("BOM_SQ", "RSC_CD", "PRO_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_DETAIL_CODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_DETAIL_CODE" ON "MES"."DETAIL_CODE" ("DETAIL_CODE", "BASIC_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_EDCTS
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_EDCTS" ON "MES"."EDCTS" ("PRO_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_EDCTS_IST
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_EDCTS_IST" ON "MES"."EDCTS_IST" ("PRO_IST_NO", "PRO_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_EDCTS_STAN
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_EDCTS_STAN" ON "MES"."EDCTS_STAN" ("STAN_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_EMP
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_EMP" ON "MES"."EMP" ("EMP_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_EQM
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_EQM" ON "MES"."EQM" ("EQM_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_ORDER_DETAIL
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_ORDER_DETAIL" ON "MES"."ORDER_DETAIL" ("ORDER_DETAIL_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_ORDER_SHEET
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_ORDER_SHEET" ON "MES"."ORDER_SHEET" ("ORDER_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_PLANS
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_PLANS" ON "MES"."PLANS" ("PLAN_CD", "PRO_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_PLANS_HEADER
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_PLANS_HEADER" ON "MES"."PLANS_HEADER" ("PLAN_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_PRCS
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_PRCS" ON "MES"."PRCS" ("PRCS_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_PRCS_RESULT
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_PRCS_RESULT" ON "MES"."PRCS_RESULT" ("PR_ORDER_CD", "PRO_CD", "PRCS_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_PROCESS_TBL
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_PROCESS_TBL" ON "MES"."PROCESS_TBL" ("PR_ORDER_CD", "PRO_CD", "PRCS_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_PRODUCT_INSPECTION
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_PRODUCT_INSPECTION" ON "MES"."PRODUCT_INSPECTION" ("PR_ORDER_CD", "PRO_CD", "TEST_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_PRO_OUST
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_PRO_OUST" ON "MES"."PRO_OUST" ("PRO_OUST_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_PRO_STC
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_PRO_STC" ON "MES"."PRO_STC" ("PRO_LOT_NO", "PRO_IST_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_PR_ORDER_HEADER
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_PR_ORDER_HEADER" ON "MES"."PR_ORDER_HEADER" ("PR_ORDER_CD", "PLAN_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_RETURN
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_RETURN" ON "MES"."RETURN" ("RETURN_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_RSC
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_RSC" ON "MES"."RSC" ("RSC_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_RSC_INSP
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_RSC_INSP" ON "MES"."RSC_INSP" ("INSP_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_RSC_INSP_DTL
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_RSC_INSP_DTL" ON "MES"."RSC_INSP_DTL" ("INSP_CD", "ORDR_CD", "RSC_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_RSC_IST
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_RSC_IST" ON "MES"."RSC_IST" ("IST_CD", "RSC_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_RSC_LOT
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_RSC_LOT" ON "MES"."RSC_LOT" ("RSC_LOT_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_RSC_ORDR
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_RSC_ORDR" ON "MES"."RSC_ORDR" ("ORDR_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_RSC_ORDR_DTL
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_RSC_ORDR_DTL" ON "MES"."RSC_ORDR_DTL" ("ORDR_CD", "RSC_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_RSC_OUST
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_RSC_OUST" ON "MES"."RSC_OUST" ("RSC_OUST_CD", "RSC_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_RSC_OUST_DTL
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_RSC_OUST_DTL" ON "MES"."RSC_OUST_DTL" ("RSC_OUST_CD", "LOT_CD", "RSC_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_VEND
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_VEND" ON "MES"."VEND" ("VEND_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PROCESS_MATERIAL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PROCESS_MATERIAL_PK" ON "MES"."PROCESS_MATERIAL" ("PR_ORDER_CD", "PRO_CD", "PRCS_CD", "RSC_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PR_ORDER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PR_ORDER_PK" ON "MES"."PR_ORDER" ("PR_ORDER_CD", "PRO_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_BASIC_CODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_BASIC_CODE" ON "MES"."BASIC_CODE" ("BASIC_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_BOM
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_BOM" ON "MES"."BOM" ("BOM_SQ", "RSC_CD", "PRO_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_DETAIL_CODE
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_DETAIL_CODE" ON "MES"."DETAIL_CODE" ("DETAIL_CODE", "BASIC_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_EDCTS
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_EDCTS" ON "MES"."EDCTS" ("PRO_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_EDCTS_IST
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_EDCTS_IST" ON "MES"."EDCTS_IST" ("PRO_IST_NO", "PRO_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_EDCTS_STAN
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_EDCTS_STAN" ON "MES"."EDCTS_STAN" ("STAN_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_EMP
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_EMP" ON "MES"."EMP" ("EMP_CODE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_EQM
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_EQM" ON "MES"."EQM" ("EQM_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index INFER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."INFER_PK" ON "MES"."INFER" ("INFER_CD", "INFER_SQ") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_ORDER_DETAIL
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_ORDER_DETAIL" ON "MES"."ORDER_DETAIL" ("ORDER_DETAIL_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_ORDER_SHEET
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_ORDER_SHEET" ON "MES"."ORDER_SHEET" ("ORDER_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_PLANS
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_PLANS" ON "MES"."PLANS" ("PLAN_CD", "PRO_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_PLANS_HEADER
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_PLANS_HEADER" ON "MES"."PLANS_HEADER" ("PLAN_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_PRCS
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_PRCS" ON "MES"."PRCS" ("PRCS_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_PRCS_RESULT
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_PRCS_RESULT" ON "MES"."PRCS_RESULT" ("PR_ORDER_CD", "PRO_CD", "PRCS_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PROCESS_MATERIAL_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PROCESS_MATERIAL_PK" ON "MES"."PROCESS_MATERIAL" ("PR_ORDER_CD", "PRO_CD", "PRCS_CD", "RSC_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_PROCESS_TBL
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_PROCESS_TBL" ON "MES"."PROCESS_TBL" ("PR_ORDER_CD", "PRO_CD", "PRCS_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_PRODUCT_INSPECTION
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_PRODUCT_INSPECTION" ON "MES"."PRODUCT_INSPECTION" ("PR_ORDER_CD", "PRO_CD", "TEST_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_PRO_OUST
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_PRO_OUST" ON "MES"."PRO_OUST" ("PRO_OUST_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_PRO_STC
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_PRO_STC" ON "MES"."PRO_STC" ("PRO_LOT_NO", "PRO_IST_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PR_ORDER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PR_ORDER_PK" ON "MES"."PR_ORDER" ("PR_ORDER_CD", "PRO_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_PR_ORDER_HEADER
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_PR_ORDER_HEADER" ON "MES"."PR_ORDER_HEADER" ("PR_ORDER_CD", "PLAN_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_RETURN
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_RETURN" ON "MES"."RETURN" ("RETURN_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_RSC
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_RSC" ON "MES"."RSC" ("RSC_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_RSC_INSP
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_RSC_INSP" ON "MES"."RSC_INSP" ("INSP_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_RSC_INSP_DTL
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_RSC_INSP_DTL" ON "MES"."RSC_INSP_DTL" ("INSP_CD", "ORDR_CD", "RSC_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_RSC_IST
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_RSC_IST" ON "MES"."RSC_IST" ("IST_CD", "RSC_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_RSC_LOT
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_RSC_LOT" ON "MES"."RSC_LOT" ("RSC_LOT_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_RSC_ORDR
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_RSC_ORDR" ON "MES"."RSC_ORDR" ("ORDR_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_RSC_ORDR_DTL
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_RSC_ORDR_DTL" ON "MES"."RSC_ORDR_DTL" ("ORDR_CD", "RSC_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_RSC_OUST
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_RSC_OUST" ON "MES"."RSC_OUST" ("RSC_OUST_CD", "RSC_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_RSC_OUST_DTL
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_RSC_OUST_DTL" ON "MES"."RSC_OUST_DTL" ("RSC_OUST_CD", "LOT_CD", "RSC_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index PK_VEND
--------------------------------------------------------

  CREATE UNIQUE INDEX "MES"."PK_VEND" ON "MES"."VEND" ("VEND_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Trigger DELETE_ORDER_DETAIL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "MES"."DELETE_ORDER_DETAIL" 
	after delete on order_sheet
	for each row
	begin 
		delete from order_detail
		where order_no = :OLD.order_no;
	end;

/
ALTER TRIGGER "MES"."DELETE_ORDER_DETAIL" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DELETE_ORDER_DETAIL
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "MES"."DELETE_ORDER_DETAIL" 
	after delete on order_sheet
	for each row
	begin 
		delete from order_detail
		where order_no = :OLD.order_no;
	end;

/
ALTER TRIGGER "MES"."DELETE_ORDER_DETAIL" ENABLE;
--------------------------------------------------------
--  DDL for Procedure DEL_PRCS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MES"."DEL_PRCS" 
  ( i_pro_cd        IN edcts.pro_cd%TYPE
  , i_prcs_cd       IN prcs.prcs_cd%TYPE )
IS
  v_row_cnt         NUMBER;
  v_min_sq          NUMBER := 0;
BEGIN
  DELETE bom
   WHERE pro_cd = i_pro_cd
     AND prcs_cd = i_prcs_cd;

  SELECT COUNT(bom_sq)
    INTO v_row_cnt
    FROM bom
   WHERE pro_cd = i_pro_cd;

  FOR i IN 1..v_row_cnt LOOP
    SELECT MIN(bom_sq)
      INTO v_min_sq
      FROM bom
     WHERE pro_cd = i_pro_cd
       AND bom_sq > v_min_sq;

    UPDATE bom
       SET bom_sq = i
     WHERE pro_cd = i_pro_cd
       AND bom_sq = v_min_sq;
  END LOOP;

  COMMIT;
END del_prcs;

/
--------------------------------------------------------
--  DDL for Procedure INSERT_ALL_DATA_FOR_DIRECTION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MES"."INSERT_ALL_DATA_FOR_DIRECTION" 
(p_pr_order_cd IN pr_order_header.pr_order_cd%TYPE,
 p_plan_no     IN pr_order_header.plan_no%TYPE,
 p_pro_cd      IN pr_order.pro_cd%TYPE,
 p_rsc_cd      IN process_material.rsc_cd%TYPE,
 p_pr_order_dt  IN pr_order_header.pr_order_dt%TYPE,
 p_dir_start_dt IN pr_order_header.dir_start_dt%TYPE,
 p_dir_end_dt   IN pr_order_header.dir_end_dt%TYPE,
 p_order_output IN pr_order.order_output%TYPE,
 p_prcs_cd  IN process_tbl.prcs_cd%TYPE,
 p_bom_sq   IN process_tbl.bom_sq%TYPE)
 IS
  v_dir_cd    pr_order_header.pr_order_cd%TYPE;
  v_check     number;

 BEGIN


 select count(pr_order_cd)
 into v_check
 from pr_order_header
 where pr_order_dt = p_pr_order_dt;

 UPDATE plans_header
 SET   dir_status = '진행중'
 WHERE plan_cd = p_plan_no;


 IF v_check = 0 THEN
            SELECT 'DIR'||
            TO_CHAR(TO_DATE(p_pr_order_dt,'yyyy-MM-dd'),'yyMMdd')||
                    CASE
                    WHEN
                    COUNT(*) > 0 THEN TO_CHAR(COUNT(*)+1,'fm000')
                    ELSE '001'
                    END
            INTO    v_dir_cd
            FROM 	pr_order_header
            WHERE 	pr_order_dt = p_pr_order_dt;

             merge into pr_order_header
             using dual
             on (pr_order_cd = v_dir_cd)
             when matched then
             update set pr_order_dt = p_pr_order_dt
             when not matched then
             insert values (v_dir_cd, null, p_pr_order_dt,p_plan_no , p_dir_start_dt,p_dir_end_dt);
else
    select pr_order_cd
    into v_dir_cd
    from pr_order_header
    where pr_order_dt = p_pr_order_dt;


 END IF;

  merge into pr_order
             using dual
             on (pr_order_cd = v_dir_cd and pro_cd =p_pro_cd)
             when matched then 
             update set order_output = p_order_output
             when not matched then
             insert  values (v_dir_cd,p_pro_cd,p_order_output,null,null);



 IF p_bom_sq = 1 THEN
        insert all
             into process_tbl(pr_order_cd,pro_cd,prcs_cd,bom_sq,stock,completed)
             values (v_dir_cd,p_pro_cd,p_prcs_cd,p_bom_sq,p_order_output,0)
             into prcs_result(pr_order_cd,pro_cd,prcs_cd,prod_cnt)
             values (v_dir_cd,p_pro_cd,p_prcs_cd,p_order_output)
        select * from dual;
else  
       merge into process_tbl
             using dual
             on (pr_order_cd = v_dir_cd and pro_cd = p_pro_cd and prcs_cd = p_prcs_cd)
             when matched then
             update set bom_sq = p_bom_sq
             when not matched then
             insert (pr_order_cd,pro_cd,prcs_cd,bom_sq,completed)
             values (v_dir_cd,p_pro_cd,p_prcs_cd,p_bom_sq,0);

             merge into prcs_result
             using dual
             on (pr_order_cd = v_dir_cd and pro_cd = p_pro_cd and prcs_cd = p_prcs_cd)
             when matched then
             update set note = null
             when not matched then
             insert (pr_order_cd,pro_cd,prcs_cd)
             values (v_dir_cd,p_pro_cd,p_prcs_cd);

 END IF;




 insert into process_material(pr_order_cd,pro_cd,prcs_cd,rsc_cd,rsc_total,rsc_use)
 values (v_dir_cd,p_pro_cd,p_prcs_cd,p_rsc_cd,p_order_output,p_order_output);


 END;

/
--------------------------------------------------------
--  DDL for Procedure INSERT_BOM
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MES"."INSERT_BOM" 
  ( i_pCd       IN edcts.pro_cd%TYPE
  , i_rCd       IN bom.rsc_cd%TYPE
  , i_unit      IN bom.unit%TYPE
  , i_uCnt      IN bom.use_cnt%TYPE
  , i_prCd      IN bom.prcs_cd%TYPE
  )
IS
  v_sq             bom.bom_sq%TYPE;
  v_eqm            bom.eqm_cd%TYPE;
  v_test           NUMBER;
BEGIN
  SELECT COUNT(bom_sq)
    INTO v_test
    FROM bom
   WHERE pro_cd = i_pCd
     AND prcs_cd = i_prCd;

  IF v_test = 0 THEN
     SELECT NVL(MAX(bom_sq), 0) + 1
       INTO v_sq
       FROM bom
      WHERE pro_cd = i_pCd;
  ELSE
     SELECT NVL(MAX(bom_sq), 0)
       INTO v_sq
       FROM bom
      WHERE pro_cd = i_pCd;
  END IF;

  SELECT eqm_type
    INTO v_eqm
    FROM prcs
   WHERE prcs_cd = i_prCd;

  INSERT INTO bom
  VALUES ( v_sq, i_rCd, i_pCd, i_unit, i_uCnt, i_prCd, v_eqm);

  UPDATE bom
     SET unit = i_unit
   WHERE pro_cd = i_unit;

  COMMIT;
END insert_bom;

/
--------------------------------------------------------
--  DDL for Procedure INSERT_UPDATE_PLAN
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MES"."INSERT_UPDATE_PLAN" 
(
   p_plan_obj_list in plan_obj
)
Is
    
BEGIN
--    	FOR i IN p_plan_obj_list.FIRST .. p_plan_obj_list.LAST
--      LOOP
--         insert into test_tbl
--         values (p_plan_obj_list(i).pro_nm,p_plan_obj_list(i).plan_cnt);
--     END LOOP;
        insert into test_tbl
         values (p_plan_obj_list.pro_nm,p_plan_obj_list.plan_cnt);

END;

/
--------------------------------------------------------
--  DDL for Procedure MERGE_PRO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MES"."MERGE_PRO" 
  ( i_pCd       IN edcts.pro_cd%TYPE
  , i_pNm       IN edcts.pro_nm%TYPE
  , i_pSpec     IN edcts.pro_spec%TYPE
  , i_pUnit     IN edcts.pro_unit%TYPE
  , i_sRtc      IN edcts.saf_rtc%TYPE
  , i_pTyp      IN edcts.pro_cd%TYPE 
  , i_unit      IN bom.unit%TYPE )
IS
    v_pNo           edcts.pro_cd%TYPE;
    v_pCode         edcts.pro_cd%TYPE;
    v_pTyp          edcts.pro_cd%TYPE;
BEGIN
  SELECT TO_CHAR(MAX(TO_NUMBER(SUBSTR(pro_cd, -3))) + 1, '099')
    INTO v_pNo
    FROM edcts
   WHERE pro_cd LIKE '%'||i_pTyp||'%';

  IF i_pTyp = 'LIQ' THEN
     v_pTyp := '액상커피';
  ELSIF i_pTyp = 'SOL' THEN
     v_pTyp := '분말커피';
  END IF;

  IF i_pCd IS NULL THEN
     v_pCode := 'PRO'||i_pTyp||TRIM(v_pNo);
     INSERT INTO detail_code
     VALUES ( i_pTyp||TRIM(v_pNo), 'PRO', v_pTyp, i_pNm, 'Y', v_pCode );
  ELSIF i_pCd = '' THEN
     v_pCode := 'PRO'||i_pTyp||TRIM(v_pNo);
     INSERT INTO detail_code
     VALUES ( i_pTyp||TRIM(v_pNo), 'PRO', v_pTyp, i_pNm, 'Y', v_pCode );
  END IF;

   MERGE INTO edcts p
   USING dual
      ON (p.pro_cd = i_pCd)
    WHEN MATCHED THEN
  UPDATE SET p.pro_nm = i_pNm
           , p.pro_spec = i_pSpec
           , p.pro_unit = i_pUnit
           , p.saf_rtc = i_sRtc
    WHEN NOT MATCHED THEN
  INSERT ( p.pro_cd, p.pro_nm, p.pro_spec, p.pro_unit, p.saf_rtc )
  VALUES ( v_pCode, i_pNm, i_pSpec, i_pUnit, i_sRtc );

  UPDATE bom
     SET unit = i_unit
   WHERE pro_cd = i_pCd;

  COMMIT;
END merge_pro;

/
--------------------------------------------------------
--  DDL for Procedure MERGE_RSC
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MES"."MERGE_RSC" 
  ( i_rCd       IN rsc.rsc_cd%TYPE
  , i_rNm       IN rsc.rsc_nm%TYPE
  , i_rTyp      IN rsc.rsc_typ%TYPE
  , i_rSpec     IN rsc.rsc_spec%TYPE
  , i_rUnit     IN rsc.rsc_unit%TYPE
  , i_sRtc      IN rsc.saf_rtc%TYPE
  , i_rAvail    IN rsc.rsc_avail%TYPE
  , i_hInput    IN varchar2 )
IS
    v_rNo           rsc.rsc_cd%TYPE;
    v_rCode         rsc.rsc_cd%TYPE;
BEGIN
  SELECT TO_CHAR(MAX(TO_NUMBER(SUBSTR(rsc_cd, -3))) + 1, '099')
    INTO v_rNo
    FROM rsc
   WHERE rsc_cd LIKE '%'||i_hInput||'%';

  IF i_rCd IS NULL THEN
     v_rCode := 'RSC'||i_hInput||TRIM(v_rNo);
     INSERT INTO detail_code
     VALUES ( i_hInput||TRIM(v_rNo), 'RSC', i_rTyp, i_rNm, 'Y', v_rCode );
  ELSIF i_rCd = '' THEN
     v_rCode := 'RSC'||i_hInput||TRIM(v_rNo);
     INSERT INTO detail_code
     VALUES ( i_hInput||TRIM(v_rNo), 'RSC', i_rTyp, i_rNm, 'Y', v_rCode );
  END IF;

   MERGE INTO rsc r
   USING dual
      ON (r.rsc_cd = i_rCd)
    WHEN MATCHED THEN
  UPDATE SET r.rsc_nm = i_rNm
           , r.rsc_typ = i_rTyp
           , r.rsc_spec = i_rSpec
           , r.rsc_unit = i_rUnit
           , r.saf_rtc = i_sRtc
           , r.rsc_avail = i_rAvail
    WHEN NOT MATCHED THEN
  INSERT ( r.rsc_cd, r.rsc_nm, r.rsc_typ, r.rsc_spec, r.rsc_unit, r.saf_rtc, r.rsc_avail )
  VALUES ( v_rCode, i_rNm, i_rTyp, i_rSpec, i_rUnit, i_sRtc, i_rAvail );

  COMMIT;
END merge_rsc;

/
--------------------------------------------------------
--  DDL for Procedure ORDER_DETAIL_SAVE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MES"."ORDER_DETAIL_SAVE" 
  ( v_order_detail_no IN order_detail.order_detail_no%TYPE
    ,v_pro_nm IN order_detail.pro_nm%TYPE 
    ,v_order_cnt IN order_detail.order_cnt%TYPE 
    ,v_order_no IN order_detail.order_no%TYPE)
is
v_data order_detail.order_detail_no%TYPE;
v_count NUMBER := 0;
begin 
          SELECT COUNT(*)
          INTO v_count
          FROM ORDER_DETAIL
          where order_no=v_order_no;

          IF v_count = 0 THEN
            v_data := v_order_no||'01';
          ELSE
            SELECT *
            into v_data
  FROM (SELECT substr(order_no,1,LENGTH(order_no)-1)||TO_CHAR(NVL(MAX(TO_NUMBER(SUBSTR(order_detail_no,-3))),0)+1)
            from order_detail
            WHERE order_no=v_order_no
            group by order_detail_no, order_no
            ORDER BY ORDER_DETAIL_NO DESC)
 WHERE rownum=1;

          END IF;

    merge into order_detail o
    using DUAL
      on(v_order_detail_no IS NOT NULL)
    when matched then
        UPDATE SET 
          o.pro_nm= v_pro_nm
          , o.order_cnt= v_order_cnt
          , o.pro_cd= ( select pro_cd from edcts where pro_nm= v_pro_nm) 
          WHERE o.order_detail_no = v_order_detail_no
    WHEN NOT MATCHED THEN 
      INSERT
        (
          o.order_detail_no, o.order_no, o.pro_nm, o.order_cnt, o.pro_cd, 
          o.order_sit_detail) 
	   values(v_data, v_order_no
	      ,v_pro_nm, v_order_cnt, ( select pro_cd from edcts where pro_nm=v_pro_nm), 
           '준비중');
    commit;
    EXCEPTION
        when others then rollback;
end;

/
--------------------------------------------------------
--  DDL for Procedure ORDER_SAVE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MES"."ORDER_SAVE" 
  ( v_vend_nm IN order_sheet.vend_nm%TYPE
    ,v_order_dt IN order_sheet.order_dt%TYPE 
    ,v_parrd_dt IN order_sheet.parrd_dt%TYPE
    ,v_order_no IN order_sheet.order_no%TYPE)
is
v_data order_sheet.order_no%TYPE;
v_count NUMBER := 0;
v_vend_cd order_sheet.vend_nm%TYPE;
begin 
        SELECT COUNT(*)
        INTO v_count
        FROM ORDER_SHEET
        where order_no=v_order_no;

        select vend_cd 
        into v_vend_cd
        from vend where vend_nm=v_vend_nm;

        IF v_count = 0 THEN
            v_data:= v_vend_cd || TO_CHAR(sysdate,'MM') || TO_CHAR(sysdate,'DD');
        ELSE
            v_data:=v_order_no;
        END IF;   

    merge into ORDER_SHEET o
    using DUAL
      on(v_order_no IS NOT NULL)
    when matched then
        UPDATE SET 
           o.vend_nm= v_vend_nm
          , o.order_dt= v_order_dt
          ,o.parrd_dt = v_parrd_dt
          , o.vend_cd= (select vend_cd from vend where vend_nm=v_vend_nm) 
        WHERE o.order_no = v_order_no

    WHEN NOT MATCHED THEN 
      INSERT
        (
          o.order_no, o.vend_nm,  o.order_dt, 
          o.order_sit, o.parrd_dt, o.vend_cd ) 
	   values(v_data, v_vend_nm, v_order_dt, 
            '진행', v_parrd_dt, ( select vend_cd from vend where vend_nm=v_vend_nm));
    commit;
    EXCEPTION
        when others then rollback;
end;

/
--------------------------------------------------------
--  DDL for Procedure PRCS_END
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MES"."PRCS_END" 
  ( i_prOrderCd    IN prcs_result.pr_order_cd%TYPE
  , i_proCd        IN prcs_result.pro_cd%TYPE
  , i_prcsCd       IN prcs_result.prcs_cd%TYPE
  , i_empCd        IN prcs_result.worker%TYPE
  , i_stock        IN prcs_result.prod_cnt%TYPE
  , i_eqmCd        IN prcs_result.eqm_cd%TYPE
  , i_bomSq        IN process_tbl.bom_sq%TYPE
  , i_inferCnt     IN prcs_result.infer_cnt%TYPE
  , i_rscCd        IN process_material.rsc_cd%TYPE
  , i_rscTotal     IN NUMBER
  )
IS
  v_sysdate         prcs_result.wk_fr_dttm%TYPE := sysdate;
  v_maxSq           process_tbl.bom_sq%TYPE;
  v_maxInfer        NUMBER;
  v_nextPrcsCd      prcs_result.prcs_cd%TYPE;
  v_useCnt          NUMBER := i_rscTotal;
  v_rscLotCd        rsc_lot.rsc_lot_cd%TYPE;
  v_lotCnt          NUMBER;
  v_minusAble       NUMBER;
BEGIN
  SELECT MAX(bom_sq)
    INTO v_maxSq
    FROM process_tbl
   WHERE pr_order_cd = i_prOrderCd
     AND pro_cd = i_proCd;

  UPDATE prcs_result
     SET wk_to_dttm = v_sysdate
       , infer_cnt = i_inferCnt
   WHERE pr_order_cd = i_prOrderCd
     AND pro_cd = i_proCd
     AND prcs_cd = i_prcsCd;

  UPDATE process_tbl
     SET completed = '1'
       , output = i_stock - i_inferCnt
       , bad_quantity = i_inferCnt
   WHERE pr_order_cd = i_prOrderCd
     AND pro_cd = i_proCd
     AND prcs_cd = i_prcsCd;

  UPDATE process_tbl
     SET stock = i_stock - i_inferCnt
   WHERE pr_order_cd = i_prOrderCd
     AND pro_cd = i_proCd
     AND bom_sq = i_bomSq + 1;
     
  UPDATE process_material
     SET rsc_use = i_rscTotal
   WHERE pr_order_cd = i_prOrderCd
     AND pro_cd = i_proCd
     AND prcs_cd = i_prcsCd
     AND rsc_cd = i_rscCd;
     
  UPDATE eqm
     SET eqm_avail = 'Y'
   WHERE eqm_cd = i_eqmCd;

  SELECT MAX(infer_sq) + 1
    INTO v_maxInfer
    FROM infer
   WHERE infer_cd = 'ERRPRC001';

  IF i_bomSq != v_maxSq THEN
     SELECT prcs_cd
       INTO v_nextPrcsCd
       FROM process_tbl
      WHERE pr_order_cd = i_prOrderCd
        AND pro_cd = i_proCd
        AND bom_sq = i_bomSq + 1;
  END IF;

  IF i_inferCnt != 0 THEN
     INSERT INTO infer
     VALUES ( 'ERRPRC001', '공정 중 불량', i_inferCnt, i_prcsCd, v_maxInfer);
  END IF;
  
  IF UPPER(v_nextPrcsCd) LIKE 'PRCTES%' THEN
     MERGE INTO product_inspection i
     USING dual
        ON (i.pr_order_cd = i_prOrderCd AND i.pro_cd = i_proCd AND i.test_cd = 'LEATEST' )
      WHEN MATCHED THEN
    UPDATE SET i.test_item = '납 함량'
      WHEN NOT MATCHED THEN
    INSERT ( pr_order_cd, pro_cd, test_cd, test_cnt, test_item )
    VALUES ( i_prOrderCd, i_proCd, 'LEATEST', i_stock - i_inferCnt, '납 함량' );
     
     MERGE INTO product_inspection i
     USING dual
        ON (i.pr_order_cd = i_prOrderCd AND i.pro_cd = i_proCd AND i.test_cd = 'TINTEST' )
      WHEN MATCHED THEN
    UPDATE SET i.test_item = '주석 함량'
      WHEN NOT MATCHED THEN
    INSERT ( pr_order_cd, pro_cd, test_cd, test_cnt, test_item )
    VALUES ( i_prOrderCd, i_proCd, 'TINTEST', i_stock - i_inferCnt, '주석 함량' );
     
     MERGE INTO product_inspection i
     USING dual
        ON (i.pr_order_cd = i_prOrderCd AND i.pro_cd = i_proCd AND i.test_cd = 'TARTEST' )
      WHEN MATCHED THEN
    UPDATE SET i.test_item = '타르색소 함량'
      WHEN NOT MATCHED THEN
    INSERT ( pr_order_cd, pro_cd, test_cd, test_cnt, test_item )
    VALUES ( i_prOrderCd, i_proCd, 'TARTEST', i_stock - i_inferCnt, '타르색소 함량' );
    
     IF UPPER(i_proCd) LIKE 'PROLIQ%' THEN
        MERGE INTO product_inspection i
        USING dual
           ON (i.pr_order_cd = i_prOrderCd AND i.pro_cd = i_proCd AND i.test_cd = 'BACTEST' )
         WHEN MATCHED THEN
       UPDATE SET i.test_item = '세균 수'
         WHEN NOT MATCHED THEN
       INSERT ( pr_order_cd, pro_cd, test_cd, test_cnt, test_item )
       VALUES ( i_prOrderCd, i_proCd, 'BACTEST', i_stock - i_inferCnt, '세균 수' );
        
        MERGE INTO product_inspection i
        USING dual
           ON (i.pr_order_cd = i_prOrderCd AND i.pro_cd = i_proCd AND i.test_cd = 'COLTEST' )
         WHEN MATCHED THEN
       UPDATE SET i.test_item = '대장균군'
         WHEN NOT MATCHED THEN
       INSERT ( pr_order_cd, pro_cd, test_cd, test_cnt, test_item )
       VALUES ( i_prOrderCd, i_proCd, 'COLTEST', i_stock - i_inferCnt, '대장균군' );
     END IF;
  END IF;
  
  SELECT *
    INTO v_rscLotCd, v_lotCnt
    FROM ( SELECT rsc_lot_cd, lot_cnt
             FROM rsc_lot
            WHERE rsc_cd = i_rscCd
              AND lot_cnt != 0
            ORDER BY rsc_lot_cd )
  WHERE ROWNUM = 1;
    
  IF v_useCnt <= v_lotCnt THEN
     UPDATE rsc_lot
        SET lot_cnt = lot_cnt - v_useCnt
      WHERE rsc_lot_cd = v_rscLotCd;
  ELSIF v_useCnt > v_lotCnt THEN
     UPDATE rsc_lot
        SET lot_cnt = 0
      WHERE rsc_lot_cd = v_rscLotCd;
     
     v_useCnt := v_useCnt - v_lotCnt;
     
     SELECT COUNT(*)
       INTO v_minusAble
       FROM rsc_lot
      WHERE rsc_cd = i_rscCd
        AND lot_cnt != 0
      ORDER BY rsc_lot_cd;
     
     IF v_minusAble != 0 THEN
        SELECT *
          INTO v_rscLotCd, v_lotCnt
          FROM ( SELECT rsc_lot_cd, lot_cnt
                   FROM rsc_lot
                  WHERE rsc_cd = i_rscCd
                    AND lot_cnt != 0
                  ORDER BY rsc_lot_cd )
         WHERE ROWNUM = 1;
     END IF;
      
     UPDATE rsc_lot
        SET lot_cnt = lot_cnt - v_useCnt
      WHERE rsc_lot_cd = v_rscLotCd;
  END IF;

  IF i_bomSq = v_maxSq THEN
     UPDATE pr_order
        SET pr_end_dt = v_sysdate
      WHERE pr_order_cd = i_prOrderCd
        AND pro_cd = i_proCd;
  END IF;

END prcs_end;

/
--------------------------------------------------------
--  DDL for Procedure PRCS_START
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MES"."PRCS_START" 
  ( i_prOrderCd    IN prcs_result.pr_order_cd%TYPE
  , i_proCd        IN prcs_result.pro_cd%TYPE
  , i_prcsCd       IN prcs_result.prcs_cd%TYPE
  , i_empCd        IN prcs_result.worker%TYPE
  , i_stock        IN prcs_result.prod_cnt%TYPE
  , i_eqmCd        IN prcs_result.eqm_cd%TYPE
  , i_bomSq        IN process_tbl.bom_sq%TYPE
  , i_rscCd        IN process_material.rsc_cd%TYPE
  , i_rscTotal     IN NUMBER
  )
IS
  v_sysdate         prcs_result.wk_fr_dttm%TYPE := sysdate;
BEGIN
  UPDATE prcs_result
     SET prod_cnt = i_stock
       , wk_fr_dttm = v_sysdate
       , worker = i_empCd
       , eqm_cd = i_eqmCd
   WHERE pr_order_cd = i_prOrderCd
     AND pro_cd = i_proCd
     AND prcs_cd = i_prcsCd;
     
  UPDATE process_material
     SET rsc_use = i_rscTotal
   WHERE pr_order_cd = i_prOrderCd
     AND pro_cd = i_proCd
     AND prcs_cd = i_prcsCd
     AND rsc_cd = i_rscCd;
     
  UPDATE eqm
     SET eqm_avail = 'N'
   WHERE eqm_cd = i_eqmCd;

  IF i_bomSq = 1 THEN
     UPDATE pr_order
        SET pr_start_dt = v_sysdate
      WHERE pr_order_cd = i_prOrderCd
        AND pro_cd = i_proCd;
  END IF;

END prcs_start;

/
--------------------------------------------------------
--  DDL for Procedure RECEIVE_SIGN_UP
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MES"."RECEIVE_SIGN_UP" 
  ( v_pro_cd IN edcts.pro_cd%TYPE --제품코드
    ,v_pro_ist_cnt IN edcts_ist.pro_ist_cnt%TYPE -- 수량
    ,v_pr_order_cd IN process_tbl.pr_order_cd%TYPE --생산지시코드
    ,v_prcs_cd IN process_tbl.prcs_cd%TYPE -- 공정코드
    ,v_pro_ist_no IN pro_stc.pro_ist_no%TYPE) -- 입고번호
IS
v_pro_lot_no pro_stc.pro_lot_no%TYPE;
BEGIN
    --LOT번호 생성
    v_pro_lot_no := 'LOT'|| SUBSTR(TO_CHAR(sysdate, 'yyyyMMdd'),3)|| v_pro_cd;
    
    --공정진행테이블에 완료여부 변경 1->2
    UPDATE process_tbl
    SET completed = '2'
    WHERE pr_order_cd = v_pr_order_cd
    AND prcs_cd = v_prcs_cd
    AND pro_cd = v_pro_cd;

    -- 제품입고테이블에 추가
    INSERT INTO edcts_ist
    VALUES (v_pro_ist_no, v_pro_cd, sysdate, v_pro_ist_cnt, v_pro_lot_no);

   
--    MERGE INTO pro_stc p
--    USING DUAL
--        ON (p.pro_lot_no=v_pro_lot_no)
--    WHEN MATCHED THEN
--        UPDATE SET p.lot_cnt = p.lot_cnt + v_pro_ist_cnt
--        WHERE p.pro_lot_no = v_pro_lot_no
--    WHEN NOT MATCHED THEN

    --LOT재고 테이블에 INSERT
       INSERT INTO pro_stc
       VALUES 
            (v_pro_lot_no, v_pro_ist_no, v_pro_cd, v_pro_ist_cnt, TO_DATE(sysdate+7,'yy/MM/dd'), sysdate);
    COMMIT;

    EXCEPTION
    WHEN OTHERS THEN ROLLBACK;
END;

/
--------------------------------------------------------
--  DDL for Procedure RE_ADD
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MES"."RE_ADD" 
( v_order_no IN order_sheet.order_no%TYPE,  -- 주문서 번호
  v_order_detail_no IN order_detail.order_detail_no%TYPE, -- 주문서 상세번호
  v_order_cnt IN order_detail.order_cnt%TYPE, -- 출고수량
  v_pro_lot_no IN pro_stc.pro_lot_no%TYPE, -- LOT번호
  v_pro_nm IN order_detail.pro_nm%TYPE) -- 제품이름
IS 
    v_num pro_oust.pro_oust_no%TYPE; -- 출고번호
    v_pro_cd order_detail.pro_cd%TYPE; -- 제품코드
    v_order order_detail.order_cnt%TYPE; -- 주문수량
BEGIN
        SELECT SUBSTR(TO_CHAR(sysdate, 'yyyyMMdd'),3) ||     -- 출고번호 생성
            (SELECT LPAD(NVL(MAX(SUBSTR(pro_oust_no,9,2)+1),1),4,'0')
             FROM pro_oust 
             WHERE TO_CHAR(pro_oust_dt,'yyyyMMdd')=TO_CHAR(sysdate,'yyyyMMdd'))
        INTO v_num
    	FROM dual;
        
        SELECT order_cnt -- 주문수량
        INTO v_order
        FROM order_detail
        WHERE order_detail_no = v_order_detail_no;

        SELECT pro_cd  -- 제품코드 찾기
        INTO v_pro_cd
        FROM edcts 
        WHERE pro_nm= v_pro_nm;

        UPDATE  pro_stc    -- 재고테이블에서 재고량 업데이트
        SET lot_cnt = (lot_cnt - v_order_cnt)
        WHERE pro_lot_no = v_pro_lot_no;

        UPDATE order_detail    -- 주문서상세에서 진행중 -> 완료로 업데이트
        SET order_sit_detail = '완료'
        WHERE order_detail_no = v_order_detail_no
        AND (v_order_cnt = v_order
        OR (SELECT SUM(pro_oust_cnt)+ v_order_cnt
              FROM pro_oust
              WHERE order_detail_no = TRIM(v_order_detail_no)
              GROUP BY order_detail_no) = v_order);

        INSERT INTO pro_oust     -- 출고 테이블 insert
        VALUES (v_num, v_pro_cd, v_pro_lot_no, sysdate, 
                v_order_cnt, v_order_no, v_order_detail_no);

       UPDATE order_sheet   -- 제품 다 출고되면 전체 주문서 완료로 변경
       SET order_sit = '완료'
       WHERE order_no = v_order_no
       AND (SELECT COUNT(*) 
       FROM order_detail 
       WHERE order_sit_detail ='완료' 
       AND order_no = v_order_no
       GROUP BY order_no) = (SELECT COUNT(*) FROM order_detail
                           WHERE order_no= v_order_no
                           GROUP BY order_no);

    COMMIT;
    EXCEPTION
        WHEN OTHERS THEN ROLLBACK;
END;

/
--------------------------------------------------------
--  DDL for Procedure TEST_END
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MES"."TEST_END" 
  ( i_prOrderCd     IN prcs_result.pr_order_cd%TYPE
  , i_proCd         IN prcs_result.pro_cd%TYPE
  , i_testCd        IN product_inspection.test_cd%TYPE
  , i_empCd         IN prcs_result.worker%TYPE
  , i_stock         IN prcs_result.prod_cnt%TYPE
  , i_testAmt       IN product_inspection.test_amt%TYPE
  )
IS
  v_sysdate         DATE := SYSDATE;
  v_testCnt         NUMBER;
  v_infer           prcs_result.prod_cnt%TYPE;
  v_maxInfer        NUMBER;
BEGIN
  SELECT CASE WHEN stan_ps <  TO_NUMBER(i_testAmt) THEN i_stock
              WHEN stan_ps >= TO_NUMBER(i_testAmt) THEN 0
         END
    INTO v_infer
    FROM edcts_stan
   WHERE stan_cd = i_testCd;

  UPDATE prcs_result
     SET wk_to_dttm = v_sysdate
       , infer_cnt = v_infer
   WHERE pr_order_cd = i_prOrderCd
     AND pro_cd = i_proCd
     AND prcs_cd = i_testCd;

  IF v_infer != 0 THEN
     UPDATE product_inspection
        SET test_amt = i_testAmt, test_ps_or_not = 'N'
      WHERE pr_order_cd = i_prOrderCd
        AND pro_cd = i_proCd
        AND test_cd = i_testCd;

     SELECT MAX(infer_sq) + 1
       INTO v_maxInfer
       FROM infer
      WHERE infer_cd = 'ERR'||i_testCd;

     INSERT INTO infer
     VALUES ( 'ERR'||i_testCd, '품질 기준 초과', v_infer, i_proCd, v_maxInfer );
     
     UPDATE prcs_result
        SET wk_to_dttm = v_sysdate
          , infer_cnt = v_infer
      WHERE pr_order_cd = i_prOrderCd
        AND pro_cd = i_proCd
        AND prcs_cd LIKE 'PRCTES%';

     UPDATE process_tbl
        SET completed = '1'
          , output = i_stock - v_infer
          , bad_quantity = v_infer
      WHERE pr_order_cd = i_prOrderCd
        AND pro_cd = i_proCd
        AND prcs_cd LIKE 'PRCTES%';

     UPDATE process_tbl
        SET completed = '1'
          , stock  = i_stock - v_infer
          , output = i_stock - v_infer
          , bad_quantity = v_infer
      WHERE pr_order_cd = i_prOrderCd
        AND pro_cd = i_proCd
        AND prcs_cd LIKE 'PRCWRP%';
        
     UPDATE pr_order
        SET pr_end_dt = v_sysdate
      WHERE pr_order_cd = i_prOrderCd
        AND pro_cd = i_proCd;
  ELSE
     UPDATE product_inspection
        SET test_amt = i_testAmt, test_ps_or_not = 'Y'
      WHERE pr_order_cd = i_prOrderCd
        AND pro_cd = i_proCd
        AND test_cd = i_testCd;
  END IF;

  SELECT COUNT(*)
    INTO v_testCnt
    FROM product_inspection
   WHERE pr_order_cd = i_prOrderCd
     AND pro_cd = i_proCd
     AND test_amt IS NULL;

  IF v_testCnt = 0 THEN
     UPDATE prcs_result
        SET wk_to_dttm = v_sysdate
          , infer_cnt = v_infer
      WHERE pr_order_cd = i_prOrderCd
        AND pro_cd = i_proCd
        AND prcs_cd LIKE 'PRCTES%';

     UPDATE process_tbl
        SET completed = '1'
          , output = i_stock - v_infer
          , bad_quantity = v_infer
      WHERE pr_order_cd = i_prOrderCd
        AND pro_cd = i_proCd
        AND prcs_cd LIKE 'PRCTES%';

     UPDATE process_tbl
        SET stock = i_stock - v_infer
      WHERE pr_order_cd = i_prOrderCd
        AND pro_cd = i_proCd
        AND prcs_cd LIKE 'PRCWRP%';
  END IF;

END test_end;

/
--------------------------------------------------------
--  DDL for Procedure TEST_START
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MES"."TEST_START" 
  ( i_prOrderCd     IN prcs_result.pr_order_cd%TYPE
  , i_proCd         IN prcs_result.pro_cd%TYPE
  , i_testCd        IN product_inspection.test_cd%TYPE
  , i_empCd         IN prcs_result.worker%TYPE
  , i_stock         IN prcs_result.prod_cnt%TYPE
  )
IS
  v_sysdate         DATE := SYSDATE;
BEGIN
   MERGE INTO prcs_result r
   USING dual
      ON (r.pr_order_cd = i_prOrderCd AND r.pro_cd = i_proCd AND r.prcs_cd = i_testCd)
    WHEN MATCHED THEN
  UPDATE SET r.worker = i_empCd
       , r.prod_cnt = i_stock
    WHEN NOT MATCHED THEN
  INSERT ( r.pr_order_cd, r.pro_cd, r.prcs_cd, r.worker, r.wk_fr_dttm, r.prod_cnt)
  VALUES ( i_prOrderCd, i_proCd, i_testCd, i_empCd, v_sysdate, i_stock );

  UPDATE prcs_result
     SET wk_fr_dttm = v_sysdate
       , worker = i_empCd
   WHERE pr_order_cd = i_prOrderCd
     AND pro_cd = i_proCd
     AND prcs_cd LIKE 'PRCTES%';

END test_start;

/
--------------------------------------------------------
--  DDL for Procedure UPSERT_DETAIL_CODE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MES"."UPSERT_DETAIL_CODE" 
  ( v_dCode      IN detail_code.detail_code%TYPE
  , v_bCode      IN detail_code.basic_code%TYPE
  , v_dName      IN detail_code.detail_name%TYPE
  , v_dExplain   IN detail_code.detail_explain%TYPE
  , v_dAvail     IN detail_code.detail_avail%TYPE )
IS
BEGIN
   MERGE INTO detail_code d
   USING dual
      ON (d.basic_code||d.detail_code = v_bCode||v_dCode)
    WHEN MATCHED THEN
  UPDATE SET d.detail_name = v_dName
           , d.detail_explain = v_dExplain
           , d.detail_avail = v_dAvail
           , d.full_code = v_bCode||v_dCode
    WHEN NOT MATCHED THEN
  INSERT ( d.detail_code, d.basic_code, d.detail_name, d.detail_explain, d.detail_avail, d.full_code )
  VALUES ( v_dCode, v_bCode, v_dName, v_dExplain, v_dAvail, v_bCode||v_dCode );

  IF v_bCode = 'VND' THEN
     MERGE INTO vend v
     USING dual
        ON ( v.vend_cd = v_bCode || v_dCode )
      WHEN MATCHED THEN
    UPDATE SET v.vend_nm = v_dExplain
      WHEN NOT MATCHED THEN
    INSERT ( vend_cd, vend_nm )
    VALUES ( v_bCode || v_dCode, v_dName );

  ELSIF v_bCode = 'EMP' THEN
     MERGE INTO emp e
     USING dual
        ON ( e.emp_code = v_bCode || v_dCode )
      WHEN MATCHED THEN
    UPDATE SET e.emp_name = v_dExplain
      WHEN NOT MATCHED THEN
    INSERT ( emp_code, emp_name )
    VALUES ( v_bCode || v_dCode, v_dName );

  ELSIF v_bCode = 'RSC' THEN
     MERGE INTO rsc r
     USING dual
        ON ( r.rsc_cd = v_bCode || v_dCode )
      WHEN MATCHED THEN
    UPDATE SET r.rsc_nm = v_dExplain
             , r.rsc_typ = v_dName
             , r.rsc_avail = v_dAvail
      WHEN NOT MATCHED THEN
    INSERT ( rsc_cd, rsc_nm, rsc_typ, rsc_avail )
    VALUES ( v_bCode || v_dCode, v_dExplain, v_dName, v_dAvail );

  ELSIF v_bCode = 'PRO' THEN
     MERGE INTO edcts e
     USING dual
        ON ( e.pro_cd = v_bCode || v_dCode )
      WHEN MATCHED THEN
    UPDATE SET e.pro_nm = v_dExplain
      WHEN NOT MATCHED THEN
    INSERT ( pro_cd, pro_nm )
    VALUES ( v_bCode || v_dCode, v_dExplain );

  ELSIF v_bCode = 'EQM' THEN
     MERGE INTO eqm e
     USING dual
        ON ( e.eqm_cd = v_bCode || v_dCode )
      WHEN MATCHED THEN
    UPDATE SET e.eqm_nm = v_dExplain, e.eqm_type = v_dName
      WHEN NOT MATCHED THEN
    INSERT ( eqm_cd, eqm_nm, eqm_type, eqm_avail )
    VALUES ( v_bCode || v_dCode, v_dExplain, v_dName, 'Y' );

  ELSIF v_bCode = 'PRC' THEN
     MERGE INTO prcs p
     USING dual
        ON ( p.prcs_cd = v_bCode || v_dCode )
      WHEN MATCHED THEN
    UPDATE SET p.prcs_nm = v_dExplain, p.eqm_type = v_dName||'기'
      WHEN NOT MATCHED THEN
    INSERT ( prcs_cd, prcs_nm, eqm_type )
    VALUES ( v_bCode || v_dCode, v_dExplain, v_dName||'기' );

  END IF;

  COMMIT;
END upsert_detail_code;

/
--------------------------------------------------------
--  DDL for Procedure UPSERT_VEND
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MES"."UPSERT_VEND" 
  ( v_iCode      IN vend.vend_cd%TYPE
  , v_vName      IN vend.vend_nm%TYPE
  , v_bizno      IN vend.bizno%TYPE
  , v_telno      IN vend.telno%TYPE
  , v_vAddr      IN vend.vend_addr%TYPE
  , v_eCode      IN vend.emp_code%TYPE
  , v_vType      IN vend.vend_cd%TYPE )
IS
    v_vNo           vend.vend_cd%TYPE;
    v_vCode         vend.vend_cd%TYPE;
    v_type          vend.vend_cd%TYPE;
BEGIN
  SELECT TO_CHAR(MAX(TO_NUMBER(SUBSTR(vend_cd, -3))) + 1, '099')
    INTO v_vNo
    FROM vend
   WHERE vend_cd LIKE '%'||v_vType||'%';

  IF v_vType = 'PUR' THEN
     v_type := '매입처';
  ELSIF v_vType = 'SAL' THEN
     v_type := '납품처';
  ELSIF v_vType = 'TRA' THEN
     v_type := '운송회사';
  END IF;

  IF v_iCode IS NULL THEN
     v_vCode := 'VND'||v_vType||TRIM(v_vNo);
     INSERT INTO detail_code
     VALUES ( v_vType||TRIM(v_vNo), 'VND', v_type, v_vName, 'Y', v_vCode );
  ELSIF v_iCode = '' THEN
     v_vCode := 'VND'||v_vType||TRIM(v_vNo);
     INSERT INTO detail_code
     VALUES ( v_vType||TRIM(v_vNo), 'VND', v_type, v_vName, 'Y', v_vCode );
  END IF;

   MERGE INTO vend v
   USING dual
      ON (v.vend_cd = v_iCode)
    WHEN MATCHED THEN
  UPDATE SET v.vend_nm = v_vName
           , v.bizno = v_bizno
           , v.telno = v_telno
           , v.vend_addr = v_vAddr
           , v.emp_code = v_eCode
    WHEN NOT MATCHED THEN
  INSERT ( v.vend_cd, v.vend_nm, v.bizno, v.telno, v.vend_addr, v.emp_code )
  VALUES ( v_vCode, v_vName, v_bizno, v_telno, v_vAddr, v_eCode );

  COMMIT;
END upsert_vend;

/
--------------------------------------------------------
--  Constraints for Table BASIC_CODE
--------------------------------------------------------

  ALTER TABLE "MES"."BASIC_CODE" ADD CONSTRAINT "PK_BASIC_CODE" PRIMARY KEY ("BASIC_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table BOM
--------------------------------------------------------

  ALTER TABLE "MES"."BOM" ADD CONSTRAINT "PK_BOM" PRIMARY KEY ("BOM_SQ", "RSC_CD", "PRO_CD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MES"."BOM" MODIFY ("BOM_SQ" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table DETAIL_CODE
--------------------------------------------------------

  ALTER TABLE "MES"."DETAIL_CODE" ADD CONSTRAINT "PK_DETAIL_CODE" PRIMARY KEY ("DETAIL_CODE", "BASIC_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MES"."DETAIL_CODE" MODIFY ("BASIC_CODE" NOT NULL ENABLE);
  ALTER TABLE "MES"."DETAIL_CODE" MODIFY ("DETAIL_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table EDCTS
--------------------------------------------------------

  ALTER TABLE "MES"."EDCTS" ADD CONSTRAINT "PK_EDCTS" PRIMARY KEY ("PRO_CD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MES"."EDCTS" MODIFY ("PRO_CD" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table EDCTS_IST
--------------------------------------------------------

  ALTER TABLE "MES"."EDCTS_IST" ADD CONSTRAINT "PK_EDCTS_IST" PRIMARY KEY ("PRO_IST_NO", "PRO_CD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MES"."EDCTS_IST" MODIFY ("PRO_IST_NO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table EDCTS_STAN
--------------------------------------------------------

  ALTER TABLE "MES"."EDCTS_STAN" ADD CONSTRAINT "PK_EDCTS_STAN" PRIMARY KEY ("STAN_CD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MES"."EDCTS_STAN" MODIFY ("STAN_CD" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table EMP
--------------------------------------------------------

  ALTER TABLE "MES"."EMP" ADD CONSTRAINT "PK_EMP" PRIMARY KEY ("EMP_CODE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MES"."EMP" MODIFY ("EMP_CODE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table EQM
--------------------------------------------------------

  ALTER TABLE "MES"."EQM" ADD CONSTRAINT "PK_EQM" PRIMARY KEY ("EQM_CD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MES"."EQM" MODIFY ("EQM_CD" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table INFER
--------------------------------------------------------

  ALTER TABLE "MES"."INFER" ADD CONSTRAINT "INFER_PK" PRIMARY KEY ("INFER_CD", "INFER_SQ")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MES"."INFER" MODIFY ("INFER_SQ" NOT NULL ENABLE);
  ALTER TABLE "MES"."INFER" MODIFY ("INFER_CD" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ORDER_DETAIL
--------------------------------------------------------

  ALTER TABLE "MES"."ORDER_DETAIL" ADD CONSTRAINT "PK_ORDER_DETAIL" PRIMARY KEY ("ORDER_DETAIL_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MES"."ORDER_DETAIL" MODIFY ("ORDER_DETAIL_NO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ORDER_SHEET
--------------------------------------------------------

  ALTER TABLE "MES"."ORDER_SHEET" ADD CONSTRAINT "PK_ORDER_SHEET" PRIMARY KEY ("ORDER_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MES"."ORDER_SHEET" MODIFY ("ORDER_NO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLANS
--------------------------------------------------------

  ALTER TABLE "MES"."PLANS" ADD CONSTRAINT "PK_PLANS" PRIMARY KEY ("PLAN_CD", "PRO_CD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MES"."PLANS" MODIFY ("PLAN_CD" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PLANS_HEADER
--------------------------------------------------------

  ALTER TABLE "MES"."PLANS_HEADER" ADD CONSTRAINT "PK_PLANS_HEADER" PRIMARY KEY ("PLAN_CD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MES"."PLANS_HEADER" MODIFY ("PLAN_CD" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PRCS
--------------------------------------------------------

  ALTER TABLE "MES"."PRCS" ADD CONSTRAINT "PK_PRCS" PRIMARY KEY ("PRCS_CD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MES"."PRCS" MODIFY ("PRCS_CD" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PRCS_RESULT
--------------------------------------------------------

  ALTER TABLE "MES"."PRCS_RESULT" ADD CONSTRAINT "PK_PRCS_RESULT" PRIMARY KEY ("PR_ORDER_CD", "PRO_CD", "PRCS_CD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PROCESS_MATERIAL
--------------------------------------------------------

  ALTER TABLE "MES"."PROCESS_MATERIAL" ADD CONSTRAINT "PROCESS_MATERIAL_PK" PRIMARY KEY ("PR_ORDER_CD", "PRO_CD", "PRCS_CD", "RSC_CD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MES"."PROCESS_MATERIAL" MODIFY ("PRCS_CD" NOT NULL ENABLE);
  ALTER TABLE "MES"."PROCESS_MATERIAL" MODIFY ("PRO_CD" NOT NULL ENABLE);
  ALTER TABLE "MES"."PROCESS_MATERIAL" MODIFY ("PR_ORDER_CD" NOT NULL ENABLE);
  ALTER TABLE "MES"."PROCESS_MATERIAL" MODIFY ("RSC_CD" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PROCESS_TBL
--------------------------------------------------------

  ALTER TABLE "MES"."PROCESS_TBL" ADD CONSTRAINT "PK_PROCESS_TBL" PRIMARY KEY ("PR_ORDER_CD", "PRO_CD", "PRCS_CD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MES"."PROCESS_TBL" MODIFY ("PRO_CD" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PRODUCT_INSPECTION
--------------------------------------------------------

  ALTER TABLE "MES"."PRODUCT_INSPECTION" MODIFY ("TEST_CD" NOT NULL ENABLE);
  ALTER TABLE "MES"."PRODUCT_INSPECTION" ADD CONSTRAINT "PK_PRODUCT_INSPECTION" PRIMARY KEY ("PR_ORDER_CD", "PRO_CD", "TEST_CD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MES"."PRODUCT_INSPECTION" MODIFY ("PRO_CD" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PRO_OUST
--------------------------------------------------------

  ALTER TABLE "MES"."PRO_OUST" ADD CONSTRAINT "PK_PRO_OUST" PRIMARY KEY ("PRO_OUST_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MES"."PRO_OUST" MODIFY ("PRO_OUST_NO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PRO_STC
--------------------------------------------------------

  ALTER TABLE "MES"."PRO_STC" ADD CONSTRAINT "PK_PRO_STC" PRIMARY KEY ("PRO_LOT_NO", "PRO_IST_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MES"."PRO_STC" MODIFY ("PRO_IST_NO" NOT NULL ENABLE);
  ALTER TABLE "MES"."PRO_STC" MODIFY ("PRO_LOT_NO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PR_ORDER
--------------------------------------------------------

  ALTER TABLE "MES"."PR_ORDER" ADD CONSTRAINT "PR_ORDER_PK" PRIMARY KEY ("PR_ORDER_CD", "PRO_CD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MES"."PR_ORDER" MODIFY ("PR_ORDER_CD" NOT NULL ENABLE);
  ALTER TABLE "MES"."PR_ORDER" MODIFY ("PRO_CD" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table PR_ORDER_HEADER
--------------------------------------------------------

  ALTER TABLE "MES"."PR_ORDER_HEADER" MODIFY ("PR_ORDER_CD" NOT NULL ENABLE);
  ALTER TABLE "MES"."PR_ORDER_HEADER" ADD CONSTRAINT "PK_PR_ORDER_HEADER" PRIMARY KEY ("PR_ORDER_CD", "PLAN_NO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MES"."PR_ORDER_HEADER" MODIFY ("PLAN_NO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RETURN
--------------------------------------------------------

  ALTER TABLE "MES"."RETURN" ADD CONSTRAINT "PK_RETURN" PRIMARY KEY ("RETURN_CD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MES"."RETURN" MODIFY ("RETURN_CD" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RSC
--------------------------------------------------------

  ALTER TABLE "MES"."RSC" ADD CONSTRAINT "PK_RSC" PRIMARY KEY ("RSC_CD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MES"."RSC" MODIFY ("RSC_CD" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RSC_INSP
--------------------------------------------------------

  ALTER TABLE "MES"."RSC_INSP" ADD CONSTRAINT "PK_RSC_INSP" PRIMARY KEY ("INSP_CD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table RSC_INSP_DTL
--------------------------------------------------------

  ALTER TABLE "MES"."RSC_INSP_DTL" ADD CONSTRAINT "PK_RSC_INSP_DTL" PRIMARY KEY ("INSP_CD", "ORDR_CD", "RSC_CD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table RSC_IST
--------------------------------------------------------

  ALTER TABLE "MES"."RSC_IST" ADD CONSTRAINT "PK_RSC_IST" PRIMARY KEY ("IST_CD", "RSC_CD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table RSC_LOT
--------------------------------------------------------

  ALTER TABLE "MES"."RSC_LOT" ADD CONSTRAINT "PK_RSC_LOT" PRIMARY KEY ("RSC_LOT_CD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table RSC_ORDR
--------------------------------------------------------

  ALTER TABLE "MES"."RSC_ORDR" ADD CONSTRAINT "PK_RSC_ORDR" PRIMARY KEY ("ORDR_CD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table RSC_ORDR_DTL
--------------------------------------------------------

  ALTER TABLE "MES"."RSC_ORDR_DTL" ADD CONSTRAINT "PK_RSC_ORDR_DTL" PRIMARY KEY ("ORDR_CD", "RSC_CD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table RSC_OUST
--------------------------------------------------------

  ALTER TABLE "MES"."RSC_OUST" ADD CONSTRAINT "PK_RSC_OUST" PRIMARY KEY ("RSC_OUST_CD", "RSC_CD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table RSC_OUST_DTL
--------------------------------------------------------

  ALTER TABLE "MES"."RSC_OUST_DTL" ADD CONSTRAINT "PK_RSC_OUST_DTL" PRIMARY KEY ("RSC_OUST_CD", "LOT_CD", "RSC_CD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VEND
--------------------------------------------------------

  ALTER TABLE "MES"."VEND" ADD CONSTRAINT "PK_VEND" PRIMARY KEY ("VEND_CD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "MES"."VEND" MODIFY ("VEND_CD" NOT NULL ENABLE);
